# coding: utf-8

"""
    Авито.Работа

    API для размещения, редактирования и снятия с публикации вакансии Авито Работа **Авито API для бизнеса предоставляется согласно [Условиям   использования](https://www.avito.ru/legal/pro_tools/public-api).** 

    The version of the OpenAPI document: 1
    Contact: supportautoload@avito.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from avito_job.api.job_api import JobApi


class TestJobApi(unittest.TestCase):
    """JobApi unit test stubs"""

    def setUp(self) -> None:
        self.api = JobApi()

    def tearDown(self) -> None:
        pass

    def test_applications_get_by_ids(self) -> None:
        """Test case for applications_get_by_ids

        Получение списка откликов 
        """
        pass

    def test_applications_get_ids(self) -> None:
        """Test case for applications_get_ids

        Получение идентификаторов откликов 
        """
        pass

    def test_applications_set_is_viewed(self) -> None:
        """Test case for applications_set_is_viewed

        Изменение статуса отклика 
        """
        pass

    def test_applications_webhook_delete(self) -> None:
        """Test case for applications_webhook_delete

        Отключение уведомлений по откликам (webhook) 
        """
        pass

    def test_applications_webhook_get(self) -> None:
        """Test case for applications_webhook_get

        Получение информации о подписках (webhook) 
        """
        pass

    def test_applications_webhook_put(self) -> None:
        """Test case for applications_webhook_put

        Включение уведомлений по откликам (webhook) 
        """
        pass

    def test_applications_webhooks_get(self) -> None:
        """Test case for applications_webhooks_get

        Получение списка подписок (webhook) 
        """
        pass

    def test_get_dict_by_id(self) -> None:
        """Test case for get_dict_by_id

        Получение доступных значений списка по ID словаря
        """
        pass

    def test_get_dicts(self) -> None:
        """Test case for get_dicts

        Получение списка доступных словарей
        """
        pass

    def test_resume_get_contacts(self) -> None:
        """Test case for resume_get_contacts

        Доступ к контактным данным соискателя 
        """
        pass

    def test_resume_get_item(self) -> None:
        """Test case for resume_get_item

        Просмотр данных резюме 
        """
        pass

    def test_resumes_get(self) -> None:
        """Test case for resumes_get

        Поиск резюме 
        """
        pass

    def test_search_vacancy(self) -> None:
        """Test case for search_vacancy

        Поиск вакансий 
        """
        pass

    def test_vacancies_get_by_ids(self) -> None:
        """Test case for vacancies_get_by_ids

        Просмотр данных вакансий 
        """
        pass

    def test_vacancy_archive(self) -> None:
        """Test case for vacancy_archive

        Остановка публикации вакансии
        """
        pass

    def test_vacancy_auto_renewal(self) -> None:
        """Test case for vacancy_auto_renewal

        Автопродление вакансии v2
        """
        pass

    def test_vacancy_create(self) -> None:
        """Test case for vacancy_create

        Публикация вакансии
        """
        pass

    def test_vacancy_create_v2(self) -> None:
        """Test case for vacancy_create_v2

        Публикация вакансии v2
        """
        pass

    def test_vacancy_get_item(self) -> None:
        """Test case for vacancy_get_item

        Просмотр данных вакансии 
        """
        pass

    def test_vacancy_get_statuses(self) -> None:
        """Test case for vacancy_get_statuses

        Получение статуса публикации вакансий V2
        """
        pass

    def test_vacancy_prolongate(self) -> None:
        """Test case for vacancy_prolongate

        Реактивация вакансии
        """
        pass

    def test_vacancy_update(self) -> None:
        """Test case for vacancy_update

        Редактирование вакансии
        """
        pass

    def test_vacancy_update_v2(self) -> None:
        """Test case for vacancy_update_v2

        Редактирование вакансии v2
        """
        pass


if __name__ == '__main__':
    unittest.main()
