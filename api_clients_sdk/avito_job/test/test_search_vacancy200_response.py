# coding: utf-8

"""
    Авито.Работа

    API для размещения, редактирования и снятия с публикации вакансии Авито Работа **Авито API для бизнеса предоставляется согласно [Условиям   использования](https://www.avito.ru/legal/pro_tools/public-api).** 

    The version of the OpenAPI document: 1
    Contact: supportautoload@avito.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from avito_job.models.search_vacancy200_response import SearchVacancy200Response

class TestSearchVacancy200Response(unittest.TestCase):
    """SearchVacancy200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchVacancy200Response:
        """Test SearchVacancy200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchVacancy200Response`
        """
        model = SearchVacancy200Response()
        if include_optional:
            return SearchVacancy200Response(
                meta = avito_job.models.мета_информация_ответа.Мета-информация ответа(
                    page = 1, 
                    pages = 6, 
                    per_page = 25, ),
                vacancies = [
                    avito_job.models.simplified_vacancy.SimplifiedVacancy(
                        address_details = avito_job.models.simplified_vacancy_address_details.SimplifiedVacancy_addressDetails(
                            address = '', 
                            city = '', ), 
                        business_area = '', 
                        company_name = '', 
                        link = '', 
                        profession = '', 
                        title = '', )
                    ]
            )
        else:
            return SearchVacancy200Response(
        )
        """

    def testSearchVacancy200Response(self):
        """Test SearchVacancy200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
