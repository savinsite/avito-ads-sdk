# coding: utf-8

"""
    Авито.Работа

    API для размещения, редактирования и снятия с публикации вакансии Авито Работа **Авито API для бизнеса предоставляется согласно [Условиям   использования](https://www.avito.ru/legal/pro_tools/public-api).** 

    The version of the OpenAPI document: 1
    Contact: supportautoload@avito.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from avito_job.models.resume20 import Resume20

class TestResume20(unittest.TestCase):
    """Resume20 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Resume20:
        """Test Resume20
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Resume20`
        """
        model = Resume20()
        if include_optional:
            return Resume20(
                description = 'Повар- универсал с 15 летним опытом работы:
повар - пекарь, шеф-поваром на судах;
повар -универсал в экспедициях и на приисках;
повар горячего и холодного цехов в ресторанах и кафе Москвы;
щеф-повар в ресторанах и ночных клубах Одессы.
Знание русской, поморской, украинской, кавказской, итальянской кухонь. Технология, администрирование. 
управление персоналом.',
                id = 2143065041,
                is_active = True,
                is_purchased = True,
                params = avito_job.models.resume2_0_params.Resume2_0_params(
                    ability_to_business_trip = 'Не готов', 
                    address = 'Москва, Лесная улица 7', 
                    age = 32, 
                    business_area = 'IT, интернет, телеком', 
                    driver_licence = 'true', 
                    driver_licence_category = [
                        'a'
                        ], 
                    education = 'Высшее', 
                    education_list = [
                        avito_job.models.resume2_0_params_education_list_inner.Resume2_0_params_education_list_inner(
                            education_stop = '1995', 
                            institution = 'МГИМО МИД РФ', 
                            specialty = 'Финансы и кредит, экономист-международник', )
                        ], 
                    experience_list = [
                        avito_job.models.resume2_0_params_experience_list_inner.Resume2_0_params_experience_list_inner(
                            company = 'МТС', 
                            position = 'Эксперт клиентского сервиса', 
                            responsibilities = 'Принятие входящих обращений от клиентов; помощь в решении возникающих вопросов; консультирование по продуктам компании; продажи', 
                            work_finish = 'Sat Sep 01 04:00:00 GMT+04:00 2018', 
                            work_start = 'Wed Jul 01 04:00:00 GMT+04:00 2015', )
                        ], 
                    language_list = [
                        avito_job.models.resume2_0_params_language_list_inner.Resume2_0_params_language_list_inner(
                            language = 'Коми', 
                            language_level = 'Начальный', )
                        ], 
                    moving = 'Невозможен', 
                    nationality = 'Филиппины', 
                    pol = 'Мужской', 
                    razreshenie_na_rabotu_v_rossii = 'Да', 
                    schedule = 'flyInFlyOut', ),
                photos = [
                    avito_job.models.изображение.Изображение(
                        url = '', )
                    ],
                salary = 60000,
                start_time = '2020-08-21T08:44:12Z',
                title = 'Повар-универсал',
                update_time = '2020-08-21T09:53:06Z',
                url = '/moskva/rezume/povar-universal_358696_2143065041'
            )
        else:
            return Resume20(
        )
        """

    def testResume20(self):
        """Test Resume20"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
