# coding: utf-8

"""
    Авито.Работа

    API для размещения, редактирования и снятия с публикации вакансии Авито Работа **Авито API для бизнеса предоставляется согласно [Условиям   использования](https://www.avito.ru/legal/pro_tools/public-api).** 

    The version of the OpenAPI document: 1
    Contact: supportautoload@avito.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from avito_job.models.enriched_properties import EnrichedProperties

class TestEnrichedProperties(unittest.TestCase):
    """EnrichedProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EnrichedProperties:
        """Test EnrichedProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EnrichedProperties`
        """
        model = EnrichedProperties()
        if include_optional:
            return EnrichedProperties(
                age = avito_job.models.enriched_properties_age.EnrichedProperties_age(
                    matching_status = 'no_criteria', 
                    value = 56, ),
                citizenship = avito_job.models.enriched_properties_citizenship.EnrichedProperties_citizenship(
                    matching_status = 'no_criteria', 
                    value = '', ),
                experience = avito_job.models.enriched_properties_experience.EnrichedProperties_experience(
                    matching_status = 'no_criteria', 
                    value = '', ),
                full_name = avito_job.models.enriched_properties_full_name.EnrichedProperties_full_name(
                    matching_status = 'no_criteria', 
                    value = '', ),
                gender = avito_job.models.enriched_properties_gender.EnrichedProperties_gender(
                    matching_status = 'no_criteria', 
                    value = '', ),
                phone = avito_job.models.enriched_properties_phone.EnrichedProperties_phone(
                    matching_status = 'no_criteria', 
                    value = '', ),
                status = 'in_progress'
            )
        else:
            return EnrichedProperties(
        )
        """

    def testEnrichedProperties(self):
        """Test EnrichedProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
