# coding: utf-8

"""
    Авито.Работа

    API для размещения, редактирования и снятия с публикации вакансии Авито Работа **Авито API для бизнеса предоставляется согласно [Условиям   использования](https://www.avito.ru/legal/pro_tools/public-api).** 

    The version of the OpenAPI document: 1
    Contact: supportautoload@avito.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from avito_job.models.vacancy_v2_create import VacancyV2Create

class TestVacancyV2Create(unittest.TestCase):
    """VacancyV2Create unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VacancyV2Create:
        """Test VacancyV2Create
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VacancyV2Create`
        """
        model = VacancyV2Create()
        if include_optional:
            return VacancyV2Create(
                administrator_organization_type = 56,
                age = avito_job.models.age_criteria.AgeCriteria(
                    from = 18, 
                    to = 65, ),
                age_preferences = olderThan45,
                apply_processing = avito_job.models.apply_processing.ApplyProcessing(
                    additional_questions = [
                        'experience'
                        ], 
                    apply_type = 'only_with_resume', ),
                billing_type = 'package',
                bonuses = ["pitanie","prozivanie"],
                business_area = 56,
                citizenship = ["rus"],
                construction_work_type = ["paintingWorks"],
                contacts = avito_job.models.vacancy_v2_create_contacts.VacancyV2Create_contacts(
                    allow_calls = True, 
                    allow_messages = True, 
                    name = '', 
                    phone = '', ),
                cuisine = ["russian"],
                delivery_method = [
                    'car'
                    ],
                description = '',
                driving_experience = 'noExperience',
                driving_license_category = [
                    'A'
                    ],
                eatery_type = ["cafe"],
                education_level = '["higher"]',
                employment = '',
                experience = 'noMatter',
                facility_type = ["production"],
                food_production_shop_type = ["cold"],
                grade = '["lead"]',
                hierarchy = avito_job.models.vacancy_v2_create_hierarchy.VacancyV2Create_hierarchy(
                    employee_id = 56, ),
                image_url = '',
                is_company_car = True,
                is_side_job = True,
                location = avito_job.models.vacancy_v2_create_location.VacancyV2Create_location(
                    address = avito_job.models.location_address.LocationAddress(
                        area = 'городской округ Новосибирск', 
                        house = '117', 
                        locality = 'Новосибирск', 
                        province = 'Новосибирская область', 
                        region = 'Сибирский федеральный округ', 
                        street = 'Вертковская улица', ), 
                    coordinates = avito_job.models.coordinates.Coordinates(
                        latitude = 1.337, 
                        longitude = 1.337, ), ),
                medical_book = '["registerByCandidate"]',
                medical_specialization = ["Вирусолок","Терапевт"],
                medical_specialization_ids = [3265936,3265937],
                payout_frequency = 'dailyPay',
                profession = 56,
                programs = chastyeVyplaty,
                registration_method = ["contract","gph_individual"],
                retail_equipment_type = ["cashRegisterAndPosTerminals"],
                retail_shop_type = ["hypermarketOrSupermarket"],
                salary = avito_job.models.vacancy_v2_create_salary.VacancyV2Create_salary(
                    from = 30000, 
                    to = 60000, ),
                salary_detail = avito_job.models.salary_detail.SalaryDetail(
                    base = avito_job.models.salary_detail_base.SalaryDetail_base(
                        bonus = '5% от продаж в месяц', 
                        range = avito_job.models.salary_base_range.SalaryBaseRange(
                            from = 30000, 
                            to = 60000, ), ), 
                    paid_period = '["month"]', 
                    taxes = '["gross"]', ),
                schedule = 'flyInFlyOut',
                shifts = [
                    56
                    ],
                title = '',
                tools_availability = '["needYourOwn"]',
                vacancy_code = '',
                vehicle_type = 56,
                work_days_per_week = [
                    56
                    ],
                work_format = [
                    'office'
                    ],
                work_hours_per_day = [
                    56
                    ],
                worker_class = ["1"]
            )
        else:
            return VacancyV2Create(
                billing_type = 'package',
                business_area = 56,
                description = '',
                employment = '',
                experience = 'noMatter',
                location = avito_job.models.vacancy_v2_create_location.VacancyV2Create_location(
                    address = avito_job.models.location_address.LocationAddress(
                        area = 'городской округ Новосибирск', 
                        house = '117', 
                        locality = 'Новосибирск', 
                        province = 'Новосибирская область', 
                        region = 'Сибирский федеральный округ', 
                        street = 'Вертковская улица', ), 
                    coordinates = avito_job.models.coordinates.Coordinates(
                        latitude = 1.337, 
                        longitude = 1.337, ), ),
                schedule = 'flyInFlyOut',
                title = '',
        )
        """

    def testVacancyV2Create(self):
        """Test VacancyV2Create"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
