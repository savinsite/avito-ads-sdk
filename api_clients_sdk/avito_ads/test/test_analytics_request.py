# coding: utf-8

"""
    Объявления

    API для получение статистики по объявлениям, применения дополнительных услуг, а также просмотр статусов объявлений  **Авито API для бизнеса предоставляется согласно [Условиям   использования](https://www.avito.ru/legal/pro_tools/public-api).** 

    The version of the OpenAPI document: 1
    Contact: supportautoload@avito.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from avito_ads.models.analytics_request import AnalyticsRequest

class TestAnalyticsRequest(unittest.TestCase):
    """AnalyticsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalyticsRequest:
        """Test AnalyticsRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalyticsRequest`
        """
        model = AnalyticsRequest()
        if include_optional:
            return AnalyticsRequest(
                date_from = 'Tue Sep 01 04:00:00 GMT+04:00 2020',
                date_to = 'Fri Oct 15 04:00:00 GMT+04:00 2021',
                filter = avito_ads.models.analytics_request_filter.AnalyticsRequest_filter(
                    category_ids = [11,12], 
                    employee_ids = [41042142,41042143], ),
                grouping = 'day',
                limit = 1000,
                metrics = ["views","contacts","presenceSpending"],
                offset = 0,
                sort = avito_ads.models.analytics_request_sort.AnalyticsRequest_sort(
                    key = '', 
                    order = 'asc', )
            )
        else:
            return AnalyticsRequest(
                date_from = 'Tue Sep 01 04:00:00 GMT+04:00 2020',
                date_to = 'Fri Oct 15 04:00:00 GMT+04:00 2021',
                grouping = 'day',
                limit = 1000,
                metrics = ["views","contacts","presenceSpending"],
                offset = 0,
        )
        """

    def testAnalyticsRequest(self):
        """Test AnalyticsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
