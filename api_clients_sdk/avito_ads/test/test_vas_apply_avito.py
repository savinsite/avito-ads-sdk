# coding: utf-8

"""
    Объявления

    API для получение статистики по объявлениям, применения дополнительных услуг, а также просмотр статусов объявлений  **Авито API для бизнеса предоставляется согласно [Условиям   использования](https://www.avito.ru/legal/pro_tools/public-api).** 

    The version of the OpenAPI document: 1
    Contact: supportautoload@avito.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from avito_ads.models.vas_apply_avito import VasApplyAvito

class TestVasApplyAvito(unittest.TestCase):
    """VasApplyAvito unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VasApplyAvito:
        """Test VasApplyAvito
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VasApplyAvito`
        """
        model = VasApplyAvito()
        if include_optional:
            return VasApplyAvito(
                amount = 1.337,
                vas = avito_ads.models.info_vas.InfoVas(
                    finish_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    schedule = [
                        datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                        ], 
                    vas_id = 'vip', )
            )
        else:
            return VasApplyAvito(
        )
        """

    def testVasApplyAvito(self):
        """Test VasApplyAvito"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
