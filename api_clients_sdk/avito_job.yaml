{
  "components": {
    "headers": {
      "X-RateLimit-Limit": {
        "description": "Количество запросов в минуту",
        "schema": {
          "format": "int32",
          "type": "integer"
        }
      },
      "X-RateLimit-Remaining": {
        "description": "Доступное количество запросов в текущем временном окне",
        "schema": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "parameters": {
      "authHeader": {
        "description": "Токен для авторизации",
        "in": "header",
        "name": "Authorization",
        "required": true,
        "schema": {
          "example": "Bearer ACCESS_TOKEN",
          "type": "string"
        }
      },
      "pathDictionaryId": {
        "description": "Идентификатор словаря",
        "in": "path",
        "name": "dictionary_id",
        "required": true,
        "schema": {
          "example": "business_area",
          "type": "string"
        }
      },
      "pathVacancyId": {
        "description": "Идентификатор вакансии на сайте",
        "in": "path",
        "name": "vacancy_id",
        "required": true,
        "schema": {
          "format": "int64",
          "type": "integer"
        }
      },
      "pathVacancyUUID": {
        "description": "UUID Идентификатор вакансии для V2 ручек\n(возвращается ручкой [Публикация вакансии V2](https://developers.avito.ru/api-catalog/job/documentation#operation/vacancyCreateV2) )\n",
        "in": "path",
        "name": "vacancy_uuid",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "webhookUrl": {
        "description": "URL, на который отправляются уведомления",
        "in": "query",
        "name": "url",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "ActivationForbiddenError": {
        "properties": {
          "error": {
            "properties": {
              "type": {
                "description": "Тип ошибки",
                "enum": [
                  "vacancies"
                ],
                "type": "string"
              },
              "value": {
                "description": "Значение ошибки",
                "enum": [
                  "chosen_vacancy_belongs_to_another_user",
                  "unavailable_for_blocked",
                  "unavailable_for_removed",
                  "too_early",
                  "unavailable_to_activate",
                  "vacancy_does_not_belong_to_employee",
                  "employee_is_not_active"
                ],
                "type": "string"
              }
            }
          }
        },
        "type": "object"
      },
      "AdministratorOrganizationType": {
        "description": "Тип организации в которой предстоит работать кандидату. Используется для профессии Администратор\n<br>\nПолучить актуальный список доступных значений можно из справочника `administrator_organization_type` через метод [getDictByID](/api-catalog/job/documentation#operation/getDictByID).\n<br>\nСтатичный [справочник](https://www.avito.st/s/openapi/catalog-admininstrator-organization-type.xml) объявлен устаревшим и более не будет использоваться. \n<br>\n",
        "nullable": true,
        "type": "integer"
      },
      "AgeCriteria": {
        "additionalProperties": false,
        "description": "Возраст кандидата.\n\nЕсли выберите значения, в данных кандидата будет отметка, что кандидат соответствует этому критерию\nили нет.\n\nКандидаты не увидят этого в вакансии.\n",
        "nullable": true,
        "properties": {
          "from": {
            "example": 18,
            "maximum": 99,
            "minimum": 14,
            "nullable": true,
            "type": "integer"
          },
          "to": {
            "example": 65,
            "maximum": 99,
            "minimum": 14,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AllowCalls": {
        "default": true,
        "description": "Разрешены ли звонки по вакансии.",
        "nullable": true,
        "type": "boolean"
      },
      "ApplyProcessing": {
        "description": "Объект с настройкой обработки откликов на вакансию.\n\nДаёт возможность настроить отклики только с резюме.\n",
        "nullable": true,
        "properties": {
          "additional_questions": {
            "description": "*DEPRECATED* Заполнение поля не влияет на вакансию.  \nМассив со списком дополнительных вопросов, которые задаст ассистент Авито.\n\n  - `experience` - вопрос про опыт работы. \nВ качестве критерия будет использоваться значение поля `experience`.  В результатах опроса ассистент отметит, достаточно у кандидата опыта или нет. \n\n  - `citizenship` - вопрос про гражданство.\nВ качестве критерия будет использоваться значение поля `citizenship`, если оно заполнено.\n\n  - `age` - вопрос про возраст.\nВ качестве критерия будет использоваться значение поля `age`, если оно заполнено.\n",
            "items": {
              "enum": [
                "experience",
                "citizenship",
                "age"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "apply_type": {
            "description": "Принимает два значения:\n\n  - `with_assistant` *DEPRECATED* - Указание данного значения не влияет на вакансию.\nОбработка отклика с помощью ассистента Авито. После отклика на вакансию  ассистент Авито предложит кандидату ответить на несколько вопросов — результаты придут в чат. ФИО и номер телефона ассистент спросит в любом случае. Остальные вопросы можно настроить  в поле `additional_questions`.\n\n  - `only_with_resume` - на вакансию смогут откликаться только кандидаты с резюме. Если у кандидата нет резюме, \nАвито поможет создать его и откликнуться на вакансию\n",
            "enum": [
              "only_with_resume",
              "with_assistant"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "BadRequest": {
        "properties": {
          "error": {
            "properties": {
              "reason": {
                "description": "Причина возникновения ошибки (может не присутствовать)",
                "enum": [
                  "is_empty",
                  "wrong_value",
                  "chosen_area_is_not_a_leaf_or_not_exist",
                  "chosen_phone_belongs_to_another_user",
                  "no_phone_for_auto_substitution"
                ],
                "type": "string"
              },
              "type": {
                "description": "Тип ошибки",
                "enum": [
                  "bad_json_data"
                ],
                "type": "string"
              },
              "value": {
                "description": "Ключ поля",
                "enum": [
                  "billing_type"
                ],
                "type": "string"
              }
            }
          }
        },
        "type": "object"
      },
      "BadRequestOnVacancy": {
        "properties": {
          "errors": {
            "items": {
              "description": "Ошибка с описанием причины",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BadRequestShort": {
        "properties": {
          "error": {
            "properties": {
              "reason": {
                "description": "Причина возникновения ошибки (может не присутствовать)",
                "enum": [
                  "is_empty",
                  "wrong_value"
                ],
                "type": "string"
              },
              "type": {
                "description": "Тип ошибки",
                "enum": [
                  "bad_json_data"
                ],
                "type": "string"
              },
              "value": {
                "description": "Ключ поля",
                "type": "string"
              }
            }
          }
        },
        "type": "object"
      },
      "Bonuses": {
        "description": "Бонусы, которые компания предоставляет кандидатам",
        "example": [
          "pitanie",
          "prozivanie"
        ],
        "items": {
          "enum": [
            "prozivanie",
            "pitanie",
            "medicinskaia_straxovka",
            "uniform",
            "oplata_benzina",
            "transport_do_raboty",
            "skidki_v_kompanii",
            "parkovka",
            "zony_otdyxa",
            "podarki_detiam_na_prazdniki",
            "oplata_mobilnoi_sviazi",
            "obuchenie",
            "kompensaciya_proezda_s_raboti",
            "kasko",
            "smartphone",
            "uslugi_shinomontaza"
          ],
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "BusinessArea": {
        "description": "Идентификатор сферы деятельности \n<br>\nПолучить актуальный список доступных значений можно из справочника `business_area` через метод [getDictByID](/api-catalog/job/documentation#operation/getDictByID).\n<br>\nСтатичный [справочник](https://www.avito.st/s/openapi/catalog-business-area.xml) объявлен устаревшим и более не будет использоваться. \n<br>\n",
        "type": "integer"
      },
      "Citizenship": {
        "properties": {
          "id": {
            "example": 15973,
            "format": "int64",
            "readOnly": true,
            "title": "Идентификатор гражданства",
            "type": "integer"
          },
          "title": {
            "example": "Россия",
            "readOnly": true,
            "title": "Имя региона",
            "type": "string"
          }
        },
        "title": "Гражданство",
        "type": "object"
      },
      "CitizenshipCriteria": {
        "description": "Гражданство кандидата.\n\nЕсли выберите значение, в данных кандидата будет отметка, что кандидат соответствует этому критерию\nили нет.\n\nКандидаты не увидят этого в вакансии.\n",
        "example": [
          "rus"
        ],
        "items": {
          "enum": [
            "rus",
            "blr",
            "kaz",
            "kgz",
            "tjk",
            "arm",
            "uzb",
            "ukr"
          ],
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "ConstructionWorkType": {
        "description": "С какими видами строительных или ремонтных работ предстоит столкнуться кандидату\n<br>\nВозможные значения элементов массива:\n  - \"paintingWorks\" - Малярные работы;\n  - \"wallCovering\" - Облицовка стен;\n  - \"tileWork\" - Работы с плиткой;\n  - \"mountingAndInstallation\" - Монтаж и установка;\n  - \"finishingWork\" - Отделочные работы;\n  - \"roofing\" - Кровельные работы;\n  - \"installationAndConfigurationOfEquipment\" - Монтаж и настройка оборудования;\n  - \"weldingWork\" - Сварочные работы;\n  - \"constructionOfFacades\" - Строительство фасадов;\n  - \"formingMaterials\" - Формовка материалов;\n  - \"concreteAndStoneWorks\" - Бетонные и каменные работы;\n  - \"repairWork\" - Ремонтные работы;\n  - \"other\" - Другие.\n",
        "example": [
          "paintingWorks"
        ],
        "items": {
          "enum": [
            "paintingWorks",
            "wallCovering",
            "tileWork",
            "mountingAndInstallation",
            "finishingWork",
            "roofing",
            "installationAndConfigurationOfEquipment",
            "weldingWork",
            "constructionOfFacades",
            "formingMaterials",
            "concreteAndStoneWorks",
            "repairWork",
            "other"
          ],
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "Contacts": {
        "description": "Контактная информация",
        "properties": {
          "email": {
            "description": "Email (строка длиной от 0 до 255 символов)",
            "type": "string"
          },
          "name": {
            "description": "Имя менеджера, контактного лица компании по данному объявлению (строка длиной до 30 символов)",
            "type": "string"
          },
          "phone": {
            "$ref": "#/components/schemas/Phone"
          }
        },
        "type": "object"
      },
      "Coordinates": {
        "description": "Географические координаты (для указания точки на карте), в градусах — десятичные дроби",
        "properties": {
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object"
      },
      "CreationForbiddenError": {
        "properties": {
          "error": {
            "properties": {
              "type": {
                "description": "Тип ошибки",
                "enum": [
                  "vacancies"
                ],
                "type": "string"
              },
              "value": {
                "description": "Значение ошибки",
                "enum": [
                  "unavailable_to_create",
                  "employee_does_not_belong_to_company",
                  "employee_is_not_active"
                ],
                "type": "string"
              }
            }
          }
        },
        "type": "object"
      },
      "Cuisine": {
        "description": "Блюда какой кухни предстоит готовить кандидату\n<br>\nВозможные значения элементов массива:\n  - \"russian\" - Русская;\n  - \"european\" - Европейская;\n  - \"caucasian\" - Кавказская;\n  - \"italian\" - Итальянская;\n  - \"japanese\" - Японская;\n  - \"turkish\" - Турецкая;\n  - \"other\" - Другая.\n",
        "example": [
          "russian"
        ],
        "items": {
          "enum": [
            "russian",
            "european",
            "caucasian",
            "italian",
            "japanese",
            "turkish",
            "other"
          ],
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "DriverLicence": {
        "enum": [
          true,
          false
        ],
        "title": "Водительское удостоверение",
        "type": "string"
      },
      "DriverLicenceCategory": {
        "items": {
          "enum": [
            "a",
            "b",
            "be",
            "c",
            "ce",
            "d",
            "de",
            "m",
            "tm",
            "tb"
          ],
          "readOnly": true,
          "type": "string"
        },
        "title": "Категория водительских прав",
        "type": "array"
      },
      "DrivingExperience": {
        "enum": [
          "less-than-three-years",
          "more-than-three-years"
        ],
        "title": "Опыт вождения",
        "type": "string"
      },
      "DrivingLicenseCategory": {
        "description": "Категория прав",
        "items": {
          "enum": [
            "A",
            "AI",
            "AII",
            "AIII",
            "AIV",
            "B",
            "B1",
            "BE",
            "C",
            "C1",
            "C1E",
            "CE",
            "D",
            "D1",
            "D1E",
            "DE",
            "E",
            "F",
            "Tm",
            "Tb",
            "M"
          ],
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "EateryType": {
        "description": "Формат заведения общепита в котором предстоит работать кандидату\n<br>\nВозможные значения элементов массива:\n  - \"cafe\" - Кафе;\n  - \"bar\" - Бар;\n  - \"fastFood\" - Фастфуд;\n  - \"restaurant\" - Ресторан;\n  - \"canteen\" - Столовая;\n  - \"bakery\" - Пекарня;\n  - \"other\" - Другой.\n",
        "example": [
          "cafe"
        ],
        "items": {
          "enum": [
            "cafe",
            "bar",
            "fastFood",
            "restaurant",
            "canteen",
            "bakery",
            "other"
          ],
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "EditingForbiddenError": {
        "properties": {
          "error": {
            "properties": {
              "type": {
                "description": "Тип ошибки",
                "enum": [
                  "vacancies"
                ],
                "type": "string"
              },
              "value": {
                "description": "Значение ошибки",
                "enum": [
                  "chosen_vacancy_belongs_to_another_user",
                  "unavailable_for_blocked",
                  "unavailable_for_removed",
                  "unavailable_to_change_location",
                  "unavailable_to_edit",
                  "vacancy_does_not_belong_to_employee",
                  "employee_is_not_active"
                ],
                "type": "string"
              }
            }
          }
        },
        "type": "object"
      },
      "EducationLevel": {
        "enum": [
          "higher",
          "unfinished-higher",
          "secondary",
          "special-secondary",
          null
        ],
        "example": "unfinished-higher",
        "nullable": true,
        "title": "Уровень образования",
        "type": "string"
      },
      "EnrichedProperties": {
        "description": "Данные о кандидате",
        "example": {
          "age": {
            "matching_status": "matched",
            "value": 21
          },
          "citizenship": {
            "matching_status": "matched",
            "value": "rus"
          },
          "experience": {
            "matching_status": "mismatched",
            "value": "lt_1"
          },
          "full_name": {
            "matching_status": "no_criteria",
            "value": null
          },
          "gender": {
            "matching_status": "no_criteria",
            "value": "male"
          },
          "phone": {
            "matching_status": "no_criteria",
            "value": "+79213223344"
          },
          "status": "completed_mismatched"
        },
        "properties": {
          "age": {
            "description": "Возраст. Пусто, если соискатель не оставил эти данные.",
            "nullable": true,
            "properties": {
              "matching_status": {
                "$ref": "#/components/schemas/EnrichedPropertyMatchingStatus"
              },
              "value": {
                "description": "Целое число, полное количество лет кандидата. Пусто, если соискатель не оставил эти данные.",
                "nullable": true,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "citizenship": {
            "description": "Гражданство. Пусто, если соискатель не оставил эти данные.",
            "nullable": true,
            "properties": {
              "matching_status": {
                "$ref": "#/components/schemas/EnrichedPropertyMatchingStatus"
              },
              "value": {
                "description": "Код страны в стандартной кодировке ISO 3166-1 alpha-3. Пусто, если соискатель не оставил эти данные.",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "experience": {
            "description": "Опыт по профессии. Пусто, если соискатель не оставил эти данные.",
            "nullable": true,
            "properties": {
              "matching_status": {
                "$ref": "#/components/schemas/EnrichedPropertyMatchingStatus"
              },
              "value": {
                "description": "Возможные значения:<br/>\n - `\"0\"` - нет опыта<br/>\n - `\"lt_1\"` - меньше года<br/>\n - `\"1\"`..`\"50\"` - значения от 1 до 50, опыт в количестве лет<br/>\n - `\"no_experience\"` - нет опыта<br/>\n - `\"has_experience\"` - есть опыта<br/>\nПусто, если соискатель не оставил эти данные.",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "full_name": {
            "description": "ФИО. Пусто, если соискатель не оставил эти данные.",
            "nullable": true,
            "properties": {
              "matching_status": {
                "$ref": "#/components/schemas/EnrichedPropertyMatchingStatus"
              },
              "value": {
                "description": "Строка со свободным вводом кандидата. Пусто, если соискатель не оставил эти данные.",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "gender": {
            "description": "Пол. Пусто, если соискатель не оставил эти данные.",
            "nullable": true,
            "properties": {
              "matching_status": {
                "$ref": "#/components/schemas/EnrichedPropertyMatchingStatus"
              },
              "value": {
                "description": "Возможные значения:<br/>\n - `\"male\"` - мужской<br/>\n - `\"female\"` - женский<br/>\nПусто, если соискатель не оставил эти данные.",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "phone": {
            "description": "Номер телефона. Пусто, если соискатель не оставил эти данные.",
            "nullable": true,
            "properties": {
              "matching_status": {
                "$ref": "#/components/schemas/EnrichedPropertyMatchingStatus"
              },
              "value": {
                "description": "Номер телефона в формате +79211234455. Пусто, если соискатель не оставил эти данные.",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "Текущий статус опроса. Возможные значения:<br/>\n - `\"in_progress\"` - кандидат еще проходит опрос<br/>\n - `\"not_completed\"` - кандидату не удалось пройти опрос до конца (например, истекло время на опрос)<br/>\n - `\"completed_no_criteria\"` - опрос завершен без оценки ответов по критериям вакансии<br/>\n - `\"completed_matched\"` - опрос завершен, кандидат подошел под критерии вакансии<br/>\n - `\"completed_mismatched\"` - опрос завершен, кандидат не подошел под критерии вакансии",
            "enum": [
              "in_progress",
              "not_completed",
              "completed_no_criteria",
              "completed_matched",
              "completed_mismatched"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnrichedPropertyMatchingStatus": {
        "description": "Статус проверки ответа кандидата по критериям вакансии.Возможные значения:<br/>\n - `\"no_criteria\"` - к ответу не выставлены критерии<br/>\n - `\"matched\"` - подошел под критерии<br/>\n - `\"mismatched\"` - не подошел под критерии",
        "enum": [
          "no_criteria",
          "matched",
          "mismatched"
        ],
        "type": "string"
      },
      "FacilityType": {
        "description": "Тип склада или производственной линии на которой предстоит работать кандидату\n<br>\nВозможные значения элементов массива:\n  - \"production\" - Производство;\n  - \"logisticsCenter\" - Логистический центр;\n  - \"warehouse\" - Склад;\n  - \"other\" - Другое.\n",
        "example": [
          "production"
        ],
        "items": {
          "enum": [
            "production",
            "logisticsCenter",
            "warehouse",
            "other"
          ],
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "FoodProductionShopType": {
        "description": "В каком цеху по приготовлению пищи предстоит работать кандидату\n<br>\nВозможные значения элементов массива:\n  - \"cold\" - Холодный;\n  - \"hot\" - Горячий;\n  - \"confectionery\" - Кондитерский;\n  - \"preparation\" - Заготовочный;\n  - \"other\" - Другой.\n",
        "example": [
          "cold"
        ],
        "items": {
          "enum": [
            "cold",
            "hot",
            "confectionery",
            "preparation",
            "other"
          ],
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "Gender": {
        "enum": [
          "female",
          "male",
          null
        ],
        "example": "female",
        "nullable": true,
        "title": "Пол",
        "type": "string"
      },
      "Geography": {
        "description": "Массив географических координат для мульти-адресов. \nВсе координаты должны быть конечны (до номера дома) и располагаться в одной локации (городе)\n",
        "items": {
          "$ref": "#/components/schemas/Coordinates"
        },
        "maxItems": 300,
        "nullable": true,
        "type": "array"
      },
      "GetApplicationsByIdsResult": {
        "properties": {
          "applies": {
            "description": "Список откликов",
            "items": {
              "properties": {
                "applicant": {
                  "description": "Данные соискателя",
                  "properties": {
                    "data": {
                      "properties": {
                        "birthday": {
                          "description": "Дата рождения",
                          "example": "1988-01-21",
                          "nullable": true,
                          "type": "string"
                        },
                        "citizenship": {
                          "description": "Гражданство",
                          "example": "Россия",
                          "nullable": true,
                          "type": "string"
                        },
                        "education": {
                          "$ref": "#/components/schemas/EducationLevel"
                        },
                        "full_name": {
                          "description": "Детали ФИО",
                          "nullable": true,
                          "properties": {
                            "first_name": {
                              "description": "Имя",
                              "example": "Иван",
                              "type": "string"
                            },
                            "last_name": {
                              "description": "Фамилия",
                              "example": "Иванов",
                              "type": "string"
                            },
                            "patronymic": {
                              "description": "Отчество, если указано",
                              "example": "Иванович",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "gender": {
                          "$ref": "#/components/schemas/Gender"
                        },
                        "name": {
                          "description": "ФИО",
                          "example": "Иванов Иван Иванович",
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "example": "1110dc2f-be18-47ef-a524-cd1234321d42",
                      "type": "string"
                    },
                    "resume_id": {
                      "example": 54312,
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "contacts": {
                  "description": "Контакты соискателя",
                  "properties": {
                    "chat": {
                      "description": "Чат с соискателем",
                      "nullable": true,
                      "properties": {
                        "value": {
                          "description": "Идентификатор чата",
                          "example": "u2i-2142059193-600277161",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "phones": {
                      "items": {
                        "properties": {
                          "status": {
                            "description": "Статус получения контакта от соискателя",
                            "example": "received",
                            "nullable": true,
                            "type": "string"
                          },
                          "value": {
                            "description": "Телефон соискателя",
                            "example": 72002000014,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "created_at": {
                  "description": "Дата создания отклика",
                  "example": "2022-05-04T12:00:00+03:00",
                  "format": "date-time (RFC3339)",
                  "type": "string"
                },
                "employee_id": {
                  "description": "Идентификатор сотрудника разместившего вакансию",
                  "example": 727226498,
                  "format": "int64",
                  "nullable": true,
                  "type": "integer"
                },
                "enriched_properties": {
                  "$ref": "#/components/schemas/EnrichedProperties"
                },
                "id": {
                  "description": "Идентификатор отклика",
                  "example": "11102026de0ad1be10e2236f",
                  "type": "string"
                },
                "is_viewed": {
                  "description": "Отклик просмотрен",
                  "example": true,
                  "type": "boolean"
                },
                "negotiation_id": {
                  "description": "Идентификатор отклика старого формата",
                  "example": 1132,
                  "format": "int64",
                  "nullable": true,
                  "type": "integer"
                },
                "prevalidation": {
                  "description": "Статус и результат превалидации кандидата",
                  "nullable": true,
                  "properties": {
                    "status": {
                      "example": "success",
                      "type": "string"
                    },
                    "summary": {
                      "description": "Выжимка превалидации. Массив ответов на вопросы",
                      "items": {
                        "$ref": "#/components/schemas/PrevalidationAnswer"
                      },
                      "nullable": true,
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "price": {
                  "description": "Цена целевого действия (копейки)",
                  "nullable": true,
                  "properties": {
                    "bonus": {
                      "description": "Цена целевого действия в бонусах (копейки)",
                      "type": "integer"
                    },
                    "real": {
                      "description": "Цена целевого действия в реальных деньгах (копейки)",
                      "type": "integer"
                    },
                    "total": {
                      "description": "Общая цена целевого действия (копейки)",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "bonus",
                    "real",
                    "total"
                  ],
                  "type": "object"
                },
                "type": {
                  "description": "Тип отклика\n\nВозможные значения:\n - \"by_phone\" - отклик через просмотр телефона\n - \"by_chat\" - отклик через чат\n",
                  "enum": [
                    "by_phone",
                    "by_chat"
                  ],
                  "example": "by_chat",
                  "type": "string"
                },
                "updated_at": {
                  "description": "Дата обновления отклика",
                  "example": "2022-05-04T12:00:00+03:00",
                  "format": "date-time (RFC3339)",
                  "type": "string"
                },
                "vacancy_id": {
                  "description": "Идентификатор вакансии на сайте Авито",
                  "example": 18725423,
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetApplicationsIdsResult": {
        "properties": {
          "applies": {
            "description": "Список идентификаторов",
            "items": {
              "properties": {
                "created_at": {
                  "description": "Дата создания отклика",
                  "example": "2022-03-21T10:23:23Z",
                  "format": "date-time (RFC3339)",
                  "type": "string"
                },
                "id": {
                  "description": "Идентификатор отклика",
                  "example": "11102026de0ad1be10e2236f",
                  "type": "string"
                },
                "updated_at": {
                  "description": "Дата обновления отклика",
                  "example": "2022-03-21T12:37:41Z",
                  "format": "date-time (RFC3339)",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 100,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Grade": {
        "description": "Предпочтительный грейд кандидата",
        "enum": [
          "junior",
          "middle",
          "senior",
          "lead"
        ],
        "example": [
          "lead"
        ],
        "nullable": true,
        "type": "string"
      },
      "HtmlTags": {
        "deprecated": true,
        "description": "Поле deprecated - теперь всегда description с html-тэгами.\nФлаг, указывающий на наличие html-тэгов в описании вакансии, для их специальной обработки. По умолчанию `false`\nПоддерживаемые тэги - `p`, `ul`, `ol`, `li`, `br`, `strong`, `em`\n",
        "type": "boolean"
      },
      "ItemNotFoundError": {
        "properties": {
          "error": {
            "properties": {
              "type": {
                "description": "Тип ошибки",
                "enum": [
                  "vacancies"
                ],
                "type": "string"
              },
              "value": {
                "description": "Значение ошибки",
                "enum": [
                  "chosen_vacancy_is_not_found"
                ],
                "type": "string"
              }
            }
          }
        },
        "type": "object"
      },
      "Location": {
        "properties": {
          "id": {
            "example": 637640,
            "format": "int64",
            "readOnly": true,
            "title": "Идентификатор региона",
            "type": "integer"
          },
          "title": {
            "example": "Москва",
            "readOnly": true,
            "title": "Имя региона",
            "type": "string"
          }
        },
        "title": "Регион",
        "type": "object"
      },
      "LocationAddress": {
        "description": "Адрес объекта",
        "properties": {
          "area": {
            "description": "Район области",
            "example": "городской округ Новосибирск",
            "type": "string"
          },
          "house": {
            "description": "Номер дома",
            "example": 117,
            "type": "string"
          },
          "locality": {
            "description": "Населённый пункт",
            "example": "Новосибирск",
            "type": "string"
          },
          "province": {
            "description": "Область",
            "example": "Новосибирская область",
            "type": "string"
          },
          "region": {
            "description": "Округ",
            "example": "Сибирский федеральный округ",
            "type": "string"
          },
          "street": {
            "description": "Улица",
            "example": "Вертковская улица",
            "type": "string"
          }
        },
        "required": [
          "locality"
        ],
        "type": "object"
      },
      "MedicalBook": {
        "enum": [
          true,
          false
        ],
        "title": "Медкнижка",
        "type": "string"
      },
      "MedicalBookVacancy": {
        "description": "Требуется ли медкнижка и кем она оформляется при приеме на работу\n<br>\nВозможные значения:\n  - \"registerByCandidate\" - Должен оформить кандидат;\n  - \"helpRegister\" - Поможем оформить;\n  - \"notNeeded\" - Не нужна;\n",
        "enum": [
          "registerByCandidate",
          "helpRegister",
          "notNeeded"
        ],
        "example": [
          "registerByCandidate"
        ],
        "nullable": true,
        "type": "string"
      },
      "MedicalSpecialization": {
        "deprecated": true,
        "description": "Медицинская специализация (можно указать несколько значений через запятую)\n<br>\nсм. названия специализаций в\n[ справочнике ](https://www.avito.st/s/openapi/catalog-medical-spec.xml)\n",
        "example": [
          "Вирусолок",
          "Терапевт"
        ],
        "items": {
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "MedicalSpecializationIds": {
        "description": "Медицинская специализация (можно указать несколько значений)\n<br>\nПолучить актуальный список доступных значений можно из справочника `medical_specialization` через метод [getDictByID](/api-catalog/job/documentation#operation/getDictByID).\n",
        "example": [
          3265936,
          3265937
        ],
        "items": {
          "type": "integer"
        },
        "nullable": true,
        "type": "array"
      },
      "NotFoundError": {
        "properties": {
          "error": {
            "properties": {
              "type": {
                "description": "Тип ошибки",
                "enum": [
                  "vacancies"
                ],
                "type": "string"
              },
              "value": {
                "description": "Значение ошибки",
                "enum": [
                  "employee_not_found"
                ],
                "type": "string"
              }
            }
          }
        },
        "type": "object"
      },
      "OwnTransport": {
        "enum": [
          false,
          "car",
          "cargo-car",
          "bike",
          "scooter"
        ],
        "title": "Свой транспорт",
        "type": "string"
      },
      "PaidPeriod": {
        "description": "За какой период указана зарплата. <br>\nВозможные значения:\n  - \"month\" - За месяц;\n  - \"week\" - За неделю;\n  - \"shift\" - За смену;\n  - \"hour\" - За час;\n  - \"piecework\" - Сдельная оплата.\n\nДля schedule равным flyInFlyOut или shift доступны для выбора только month, shift.<br>\nДля employment равны full и schedule равным fixed доступен для выбора только month.\n",
        "enum": [
          "month",
          "week",
          "shift",
          "hour",
          "piecework"
        ],
        "example": [
          "month"
        ],
        "nullable": true,
        "type": "string"
      },
      "PaymentError": {
        "properties": {
          "error": {
            "properties": {
              "type": {
                "description": "Тип ошибки",
                "enum": [
                  "vacancies"
                ],
                "type": "string"
              },
              "value": {
                "description": "Значение ошибки",
                "enum": [
                  "not_enough_purchased_services",
                  "employee_does_not_have_enough_purchased_services",
                  "employee_can_publish_only_from_billing_type_package"
                ],
                "type": "string"
              }
            }
          }
        },
        "type": "object"
      },
      "Phone": {
        "description": "Контактный телефон, если не передать - подставляется номер из профиля который используется по умолчанию. Если передать номер телефона которого нет в профиле, то он будет добавлен в профиль, но по нему необходимо будет пройти верификацию. Если номер телефона принадлежит другому пользователю, то вакансия не будет опубликована. Если вакансия публикуется от имени сотрудника и номер телефона ему не принадлежит - объявление так же не будет опубликовано.",
        "properties": {
          "city": {
            "description": "Код города (строка, соответствующая шаблону \"^\\\\d{0,6}$\")",
            "type": "string"
          },
          "country": {
            "description": "Код страны (строка, соответствующая шаблону \"^\\\\+?\\\\d{0,5}$\")",
            "type": "string"
          },
          "number": {
            "description": "Телефон (строка, соответствующая шаблону \"^[\\\\d -]{4,32}$\")",
            "type": "string"
          }
        },
        "required": [
          "country",
          "city",
          "number"
        ],
        "type": "object"
      },
      "Photo": {
        "properties": {
          "url": {
            "readOnly": true,
            "title": "URL Изображения",
            "type": "string"
          }
        },
        "title": "Изображение",
        "type": "object"
      },
      "PrevalidationAnswer": {
        "description": "Ответ на вопрос превалидации. Содержит лейбл, название и значение переменной.",
        "example": {
          "label": "ФИО",
          "value": "Сидоров Иван Петрович"
        },
        "nullable": true,
        "properties": {
          "label": {
            "description": "Название переменной",
            "type": "string"
          },
          "value": {
            "description": "Значение переменной",
            "type": "string"
          },
          "variable": {
            "description": "Идентификатор переменной. Распространенные значения:<br/> `job_fio` - ФИО<br/> `job_phone` - телефон<br/> `job_birthdate` - дата рождения<br/> `job_city` - город<br/> `job_gender` - пол<br/> `job_citizenship` - гражданство<br/> `job_schedule` - желаемый режим работы<br/> `job_educational_level` - образование<br/> `job_district` - желаемый район работы<br/> `job_experience` - есть ли подходящий опыт<br/> `job_work_duration` - стаж работы на аналогичной должности<br/> `job_last_employment` - последнее место работы<br/> `job_last_position` - должность на последнем месте работы<br/> `job_salary_expectations` - желаемая зарплата<br/> `job_responsibility` - образование, специальность<br/> `job_current_education` - учится ли сейчас<br/> `job_current_employment` - работает ли сейчас<br/> `docs_available` - наличие СНИЛС, ИНН, паспорта или временного удостоверения<br/> `job_military_docs` - наличие документов воинского учета<br/> `is_drivers_licence` - наличие водительских прав<br/> `job_drivers_licence` - категория водительских прав<br/> `drivers_licence_country` - страна выдачи водительских прав<br/> `is_individual_entrepreneur` - оформлен ли как ИП<br/> `job_employment_records` - наличие трудовой книжки<br/> `is_medical_record` - наличие медицинской книжки<br/> `job_covid19` - сертификат о вакцинации<br/> `job_official_employment` - готовность работать по трудовому договору<br/> `job_tha` - РВП<br/> `job_work_permit` - разрешение на работу<br/> `job_tractor_driver_license` - наличие прав для управления спецтехникой<br/> `way_to_travel` - способ перемещения по городу<br/> `job_hostel` - нужно ли проживание<br/> `job_fly_in_basis_readiness` - готовность к вахте по графику из вакансии<br/> `job_spent_time_road` - желаемое время на дорогу<br/> `job_call_time` - время для звонка<br/> `job_driving_experience` - стаж вождения<br/> `job_phone_android` - наличие телефона на Android<br/> `job_use_own_car` - наличие авто<br/> `job_for_me` - ищет ли работу для себя<br/> `job_email` - электронная почта<br/> `job_preferred_address` - желаемый адрес работы<br/> `is_self_employed` - статус самозанятого<br/> `job_training_ready` - готовность пройти обучение<br/> `has_pc_and_workplace` - наличие рабочего места и компьютера",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Profession": {
        "description": "Название профессии <br> Получить актуальный список доступных значений можно из справочника `profession` через метод [getDictByID](/api-catalog/job/documentation#operation/getDictByID). <br> Статичный [справочник](https://www.avito.st/s/openapi/catalog-profession.xml?v=5) объявлен устаревшим и более не будет использоваться. <br>",
        "nullable": true,
        "type": "integer"
      },
      "RegistrationMethod": {
        "description": "Способ оформления (можно указать несколько значений через запятую)\n<br>\nВозможные значения:\n- contract - Трудовой договор\n- gph_ip - ГПХ с ИП\n- gph_self_employed - ГПХ с самозанятым\n- gph_individual - ГПХ с физическим лицом\n",
        "example": [
          "contract",
          "gph_individual"
        ],
        "items": {
          "enum": [
            "contract",
            "gph_ip",
            "gph_self_employed",
            "gph_individual"
          ],
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "Resume2.0": {
        "properties": {
          "description": {
            "description": "Описание резюме",
            "example": "Повар- универсал с 15 летним опытом работы:\nповар - пекарь, шеф-поваром на судах;\nповар -универсал в экспедициях и на приисках;\nповар горячего и холодного цехов в ресторанах и кафе Москвы;\nщеф-повар в ресторанах и ночных клубах Одессы.\nЗнание русской, поморской, украинской, кавказской, итальянской кухонь. Технология, администрирование. \nуправление персоналом.",
            "type": "string"
          },
          "id": {
            "description": "Идентификатор резюме",
            "example": 2143065041,
            "format": "int64",
            "type": "integer"
          },
          "is_active": {
            "description": "Активность резюме",
            "example": true,
            "type": "boolean"
          },
          "is_purchased": {
            "description": "Контакты резюме куплены",
            "example": true,
            "type": "boolean"
          },
          "params": {
            "description": "Блок с параметрами резюме. Все поля опциональны и выводятся при наличии",
            "properties": {
              "ability_to_business_trip": {
                "description": "Готовность к командировкам",
                "enum": [
                  "Не готов",
                  "Готов",
                  "Иногда"
                ],
                "nullable": true,
                "type": "string"
              },
              "address": {
                "description": "Место, рядом с которым вы хотите работать",
                "example": "Москва, Лесная улица 7",
                "nullable": true,
                "type": "string"
              },
              "age": {
                "description": "Возраст соискателя",
                "example": 32,
                "format": "int32",
                "nullable": true,
                "type": "integer"
              },
              "business_area": {
                "description": "Сфера деятельности",
                "enum": [
                  "IT, интернет, телеком",
                  "Автомобильный бизнес",
                  "Административная работа",
                  "Банки, инвестиции",
                  "Без опыта, студенты",
                  "Бухгалтерия, финансы",
                  "Высший менеджмент",
                  "Госслужба, НКО",
                  "Домашний персонал",
                  "ЖКХ, эксплуатация",
                  "Искусство, развлечения",
                  "Консультирование",
                  "Курьерская доставка",
                  "Маркетинг, реклама, PR",
                  "Медицина, фармацевтика",
                  "Образование, наука",
                  "Охрана, безопасность",
                  "Продажи",
                  "Производство, сырьё, с/х",
                  "Страхование",
                  "Строительство",
                  "Такси",
                  "Транспорт, логистика",
                  "Туризм, рестораны",
                  "Управление персоналом",
                  "Фитнес, салоны красоты",
                  "Юриспруденция"
                ],
                "nullable": true,
                "type": "string"
              },
              "driver_licence": {
                "description": "Водительское удостоверение",
                "enum": [
                  true,
                  false
                ],
                "nullable": true,
                "type": "string"
              },
              "driver_licence_category": {
                "description": "Категория водительских прав",
                "items": {
                  "enum": [
                    "a",
                    "b",
                    "be",
                    "c",
                    "ce",
                    "d",
                    "de",
                    "m",
                    "tm",
                    "tb"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              },
              "education": {
                "description": "Образование соискателя",
                "enum": [
                  "Высшее",
                  "Незаконченное высшее",
                  "Среднее",
                  "Среднее специальное"
                ],
                "nullable": true,
                "type": "string"
              },
              "education_list": {
                "items": {
                  "properties": {
                    "education_stop": {
                      "description": "Дата окончания учебного заведения",
                      "example": 1995,
                      "nullable": true,
                      "type": "string"
                    },
                    "institution": {
                      "description": "Наименование учебного заведения",
                      "example": "МГИМО МИД РФ",
                      "nullable": true,
                      "type": "string"
                    },
                    "specialty": {
                      "description": "Специальность",
                      "example": "Финансы и кредит, экономист-международник",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "nullable": true,
                "type": "array"
              },
              "experience_list": {
                "items": {
                  "properties": {
                    "company": {
                      "description": "Наименование организации",
                      "example": "МТС",
                      "nullable": true,
                      "type": "string"
                    },
                    "position": {
                      "description": "Занимаемая должность",
                      "example": "Эксперт клиентского сервиса",
                      "nullable": true,
                      "type": "string"
                    },
                    "responsibilities": {
                      "description": "Должностные обязанности",
                      "example": "Принятие входящих обращений от клиентов; помощь в решении возникающих вопросов; консультирование по продуктам компании; продажи",
                      "nullable": true,
                      "type": "string"
                    },
                    "work_finish": {
                      "description": "Дата увольнения (при отсутствии считать, что работает по настоящее время)",
                      "example": "2018-09-01",
                      "format": "date",
                      "nullable": true,
                      "type": "string"
                    },
                    "work_start": {
                      "description": "Дата приема на работу",
                      "example": "2015-07-01",
                      "format": "date",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "nullable": true,
                "type": "array"
              },
              "language_list": {
                "items": {
                  "properties": {
                    "language": {
                      "description": "Язык",
                      "example": "Коми",
                      "nullable": true,
                      "type": "string"
                    },
                    "language_level": {
                      "description": "Уровень владения языком",
                      "enum": [
                        "Начальный",
                        "Средний",
                        "Выше среднего",
                        "Свободное владение"
                      ],
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "nullable": true,
                "type": "array"
              },
              "moving": {
                "description": "Возможность переезда",
                "enum": [
                  "Невозможен",
                  "Возможен"
                ],
                "nullable": true,
                "type": "string"
              },
              "nationality": {
                "description": "Гражданство соискателя",
                "example": "Филиппины",
                "nullable": true,
                "type": "string"
              },
              "pol": {
                "description": "Пол соискателя",
                "enum": [
                  "Мужской",
                  "Женский"
                ],
                "nullable": true,
                "type": "string"
              },
              "razreshenie_na_rabotu_v_rossii": {
                "description": "Наличие разрешения на работу в России",
                "enum": [
                  "Да",
                  "Нет"
                ],
                "nullable": true,
                "type": "string"
              },
              "schedule": {
                "description": "Режим работы\nВозможные значения:\n  - flyInFlyOut - Вахта\n  - partTime - Неполный день\n  - fullDay - Полный день\n  - flexible - Плавающий\n  - shift - Сменный\n  - remote - Удалённая работа\n  - fiveDay - Пятидневная рабочая неделя\n  - sixDay - Шестидневная рабочая неделя\n",
                "enum": [
                  "flyInFlyOut",
                  "partTime",
                  "fullDay",
                  "flexible",
                  "shift",
                  "remote",
                  "fiveDay",
                  "sixDay"
                ],
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "photos": {
            "description": "Присутствует в ответе только если в запросе есть флаг photos=true",
            "items": {
              "$ref": "#/components/schemas/Photo"
            },
            "nullable": true,
            "title": "Изображения",
            "type": "array"
          },
          "salary": {
            "description": "Зарплата. Поле может отсутствовать в ответе (выводится при наличии зарплаты)",
            "example": 60000,
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "start_time": {
            "description": "Дата публикации резюме",
            "example": "2020-08-21T08:44:12Z",
            "format": "date-time (RFC3339)",
            "type": "string"
          },
          "title": {
            "description": "Наименование резюме",
            "example": "Повар-универсал",
            "type": "string"
          },
          "update_time": {
            "description": "Дата последнего обновления резюме",
            "example": "2020-08-21T09:53:06Z",
            "format": "date-time (RFC3339)",
            "type": "string"
          },
          "url": {
            "description": "URL резюме на сайте",
            "example": "/moskva/rezume/povar-universal_358696_2143065041",
            "type": "string"
          }
        },
        "title": "Информация о резюме v2",
        "type": "object"
      },
      "ResumeContact": {
        "properties": {
          "type": {
            "enum": [
              "e-mail",
              "phone",
              "chat_id"
            ],
            "readOnly": true,
            "title": "Тип контакта",
            "type": "string"
          },
          "value": {
            "readOnly": true,
            "title": "Контактные данные",
            "type": "string"
          }
        },
        "title": "Контакт",
        "type": "object"
      },
      "ResumeContacts": {
        "properties": {
          "already_bought": {
            "example": false,
            "readOnly": true,
            "title": "Контакт уже приобретен",
            "type": "boolean"
          },
          "contacts": {
            "example": [
              {
                "type": "e-mail",
                "value": "candidate@example.com"
              },
              {
                "type": "phone",
                "value": 79211234455
              },
              {
                "type": "chat_id",
                "value": "u2i-voDBaJ_nyscu9ztBC3TTaW"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ResumeContact"
            },
            "readOnly": true,
            "title": "Контакты",
            "type": "array"
          },
          "full_name": {
            "description": "Детали ФИО",
            "nullable": true,
            "properties": {
              "first_name": {
                "description": "Имя",
                "example": "Иван",
                "type": "string"
              },
              "last_name": {
                "description": "Фамилия",
                "example": "Иванов",
                "type": "string"
              },
              "patronymic": {
                "description": "Отчество, если указано",
                "example": "Иванович",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "example": "Иванов Иван",
            "readOnly": true,
            "title": "Имя",
            "type": "string"
          }
        },
        "title": "Контакты резюме",
        "type": "object"
      },
      "ResumeSearchMeta": {
        "properties": {
          "cursor": {
            "example": 1538480436,
            "format": "int32",
            "readOnly": true,
            "title": "Курсор поиска",
            "type": "integer"
          },
          "page": {
            "example": 1,
            "format": "int32",
            "readOnly": true,
            "title": "Номер страницы",
            "type": "integer"
          },
          "pages": {
            "example": 6,
            "format": "int32",
            "readOnly": true,
            "title": "Количество страниц",
            "type": "integer"
          },
          "per_page": {
            "example": 25,
            "format": "int32",
            "readOnly": true,
            "title": "Количество записей на странице",
            "type": "integer"
          }
        },
        "title": "Мета-информация ответа",
        "type": "object"
      },
      "RetailEquipmentType": {
        "description": "С каким оборудованием или ПО предстоит работать кандидату\n<br>\nВозможные значения элементов массива:\n  - \"cashRegisterAndPosTerminals\" - Касса и POS-терминалы;\n  - \"accountingSoftware\" - Программы учёта товаров.\n",
        "example": [
          "cashRegisterAndPosTerminals"
        ],
        "items": {
          "enum": [
            "cashRegisterAndPosTerminals",
            "accountingSoftware"
          ],
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "RetailShopType": {
        "description": "Что продает магазин в котором предстоит работать кандидату\n<br>\nВозможные значения элементов массива:\n  - \"hypermarketOrSupermarket\" - Гипермаркет или супермаркет;\n  - \"grocery\" - Продуктовый;\n  - \"electronicsAndHouseholdAppliances\" - Электроника и бытовая техника;\n  - \"clothesAndShoes\" - Одежда и обувь;\n  - \"perfumesAndCosmetics\" - Парфюмерия и косметика;\n  - \"constructionAndHouseholdGoods\" - Строительство и хозтовары;\n  - \"childrenGoods\" - Детские товары;\n  - \"sportingGoods\" - Спортивные товары;\n  - \"petShop\" - Зоомагазин;\n  - \"pharmacy\" - Аптека;\n  - \"other\" - Другое.\n",
        "example": [
          "hypermarketOrSupermarket"
        ],
        "items": {
          "enum": [
            "hypermarketOrSupermarket",
            "grocery",
            "electronicsAndHouseholdAppliances",
            "clothesAndShoes",
            "perfumesAndCosmetics",
            "constructionAndHouseholdGoods",
            "childrenGoods",
            "sportingGoods",
            "petShop",
            "pharmacy",
            "other"
          ],
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "SalaryBaseBonus": {
        "description": "Премия. Не более 70 символов.",
        "example": "5% от продаж в месяц",
        "type": "string"
      },
      "SalaryBaseRange": {
        "additionalProperties": false,
        "description": "Размер оклада. Оклад не может превышать заработную плату.\n",
        "properties": {
          "from": {
            "description": "Нижняя граница оклада, рублей за paid_period",
            "example": 30000,
            "nullable": true,
            "type": "integer"
          },
          "to": {
            "description": "Верхняя граница оклада, рублей за paid_period",
            "example": 60000,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SalaryDetail": {
        "description": "Подробная информация по заработной плате",
        "nullable": true,
        "properties": {
          "base": {
            "description": "Оклад",
            "nullable": true,
            "properties": {
              "bonus": {
                "$ref": "#/components/schemas/SalaryBaseBonus"
              },
              "range": {
                "$ref": "#/components/schemas/SalaryBaseRange"
              }
            },
            "type": "object"
          },
          "paid_period": {
            "$ref": "#/components/schemas/PaidPeriod"
          },
          "taxes": {
            "$ref": "#/components/schemas/Taxes"
          }
        },
        "type": "object"
      },
      "SetApplicationsisVewedResult": {
        "properties": {
          "applies": {
            "description": "Список идентификаторов откликов и статусов их просмотренности после обновления",
            "items": {
              "properties": {
                "id": {
                  "description": "Идентификатор отклика",
                  "example": "11102026de0ad1be10e2236f",
                  "type": "string"
                },
                "is_viewed": {
                  "example": true,
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "is_viewed"
              ],
              "type": "object"
            },
            "maxItems": 100,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Shifts": {
        "description": "Смены\n<br>\nПолучить актуальный список доступных значений можно из справочника `shifts` через метод [getDictByID](/api-catalog/job/documentation#operation/getDictByID).\n<br>\nДоступен только для следующих режимов работы (schedule): \"Сменный (shift)\",  \"Фиксированный (fixed)\"\n<br>\nДля режима работы (schedule) \"Фиксированный (fixed)\" доступны только значения показывающие отношение количества рабочих дней к выходным, например \"5/2\"\n",
        "items": {
          "format": "int64",
          "type": "integer"
        },
        "nullable": true,
        "type": "array"
      },
      "SimplifiedResume": {
        "properties": {
          "age": {
            "example": 19,
            "format": "int64",
            "readOnly": true,
            "title": "Возраст",
            "type": "integer"
          },
          "created": {
            "format": "date-time",
            "readOnly": true,
            "title": "Дата публикации",
            "type": "string"
          },
          "driver_licence": {
            "$ref": "#/components/schemas/DriverLicence"
          },
          "driver_licence_category": {
            "$ref": "#/components/schemas/DriverLicenceCategory"
          },
          "driving_experience": {
            "$ref": "#/components/schemas/DrivingExperience"
          },
          "education_level": {
            "$ref": "#/components/schemas/EducationLevel"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "id": {
            "example": 2385934235,
            "format": "int64",
            "readOnly": true,
            "title": "Идентификатор резюме",
            "type": "integer"
          },
          "is_purchased": {
            "example": false,
            "readOnly": true,
            "title": "Контакты резюме куплены",
            "type": "boolean"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "medical_book": {
            "$ref": "#/components/schemas/MedicalBook"
          },
          "nationality": {
            "$ref": "#/components/schemas/Citizenship"
          },
          "own_transport": {
            "$ref": "#/components/schemas/OwnTransport"
          },
          "salary": {
            "example": 20000,
            "format": "int64",
            "readOnly": true,
            "title": "Желаемый уровень заработной платы",
            "type": "number"
          },
          "specialization": {
            "$ref": "#/components/schemas/Specialization"
          },
          "title": {
            "example": "Оператор Call-центра",
            "readOnly": true,
            "title": "Желаемая должность",
            "type": "string"
          },
          "total_experience": {
            "example": 0,
            "format": "int64",
            "readOnly": true,
            "title": "Стаж работы",
            "type": "integer"
          },
          "updated": {
            "format": "date-time",
            "title": "Дата последнего обновления",
            "type": "string"
          }
        },
        "title": "Общая информация резюме",
        "type": "object"
      },
      "SimplifiedVacancy": {
        "properties": {
          "addressDetails": {
            "properties": {
              "address": {
                "type": "string"
              },
              "city": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "businessArea": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "profession": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Specialization": {
        "properties": {
          "id": {
            "example": 10186,
            "format": "int64",
            "readOnly": true,
            "title": "Идентификатор категории",
            "type": "integer"
          },
          "title": {
            "example": "Консультирование",
            "readOnly": true,
            "title": "Имя категории",
            "type": "string"
          }
        },
        "title": "Сфера деятельности",
        "type": "object"
      },
      "StoppingForbiddenError": {
        "properties": {
          "error": {
            "properties": {
              "type": {
                "description": "Тип ошибки",
                "enum": [
                  "vacancies"
                ],
                "type": "string"
              },
              "value": {
                "description": "Значение ошибки",
                "enum": [
                  "chosen_vacancy_belongs_to_another_user",
                  "unavailable_for_blocked",
                  "unavailable_for_removed",
                  "unavailable_for_rejected",
                  "unavailable_to_stop",
                  "vacancy_does_not_belong_to_employee",
                  "employee_is_not_active"
                ],
                "type": "string"
              }
            }
          }
        },
        "type": "object"
      },
      "Taxes": {
        "description": "Зарплата указана. <br>\nВозможные значения:\n  - \"gross\" - До вычета налогов;\n  - \"net\" - На руки;\n",
        "enum": [
          "gross",
          "net"
        ],
        "example": [
          "gross"
        ],
        "nullable": true,
        "type": "string"
      },
      "ToolsAvailability": {
        "description": "Требуется ли кандидату собственные инструменты для работы\n<br>\nВозможные значения:\n  - \"needYourOwn\" - Нужны свои;\n  - \"willBeProvided\" - Предоставляет работодатель.\n",
        "enum": [
          "needYourOwn",
          "willBeProvided"
        ],
        "example": [
          "needYourOwn"
        ],
        "nullable": true,
        "type": "string"
      },
      "Vacancies2.0": {
        "items": {
          "$ref": "#/components/schemas/Vacancy2.0"
        },
        "type": "array"
      },
      "VacanciesGetByIdsBody": {
        "properties": {
          "fields": {
            "description": "Поля для основного тела ответа",
            "items": {
              "enum": [
                "title",
                "description",
                "url",
                "salary",
                "start_time",
                "update_time",
                "is_active"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "ids": {
            "description": "Идентификаторы вакансий на сайте",
            "items": {
              "type": "integer"
            },
            "maxItems": 100,
            "type": "array"
          },
          "params": {
            "description": "Дополнительные поля, которые входят в params (можно указать несколько значений через запятую). По умолчанию отображаются все поля.\ndeprecated значения manufacturing_type, industry_type, programs, warehouse_functionality",
            "items": {
              "enum": [
                "business_area",
                "employment",
                "schedule",
                "experience",
                "address",
                "coordinates",
                "change",
                "where_to_work",
                "payout_frequency",
                "age_preferences",
                "piecework_flag",
                "paid_period",
                "salary",
                "salary_base_range",
                "salary_base_bonus",
                "taxes",
                "is_company_car",
                "driving_license_category",
                "driving_experience",
                "delivery_method",
                "profession",
                "registration_method",
                "grade",
                "medical_specialization",
                "education_level",
                "bonuses",
                "worker_class",
                "food_production_shop_type",
                "eatery_type",
                "cuisine",
                "medical_book",
                "retail_equipment_type",
                "retail_shop_type",
                "tools_availability",
                "construction_work_type",
                "work_format",
                "manufacturing_type",
                "industry_type",
                "programs",
                "warehouse_functionality",
                "vehicle_type",
                "administrator_organization_type",
                "work_hours_per_day",
                "work_days_per_week",
                "shifts",
                "vacancy_code"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "ids"
        ],
        "type": "object"
      },
      "Vacancy2.0": {
        "properties": {
          "addressDetails": {
            "description": "Детали адреса вакансии",
            "nullable": true,
            "properties": {
              "address": {
                "description": "Полный адрес",
                "example": "Санкт-Петербург, Пушкин, Малая улица, 12",
                "type": "string"
              },
              "city": {
                "description": "Город",
                "example": "Пушкин",
                "type": "string"
              },
              "coordinates": {
                "properties": {
                  "latitude": {
                    "description": "Широта",
                    "example": 55.778644,
                    "format": "double",
                    "type": "number"
                  },
                  "longitude": {
                    "description": "Долгота",
                    "example": 37.587901,
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "province": {
                "description": "Область, например \"Новосибирская область\" или \"Санкт-Петербург\" для больших городов",
                "example": "Новосибирская область",
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": {
            "description": "Описание вакансии",
            "example": "Удобное расположение в разных районах Санкт-Петербурга.\nОпыт не обязателен.Обучение.\nГрафик:2/2 5/2 3/3 (День,ночь)",
            "type": "string"
          },
          "id": {
            "description": "Идентификатор вакансии на сайте",
            "example": 2142059193,
            "format": "int64",
            "type": "integer"
          },
          "is_active": {
            "description": "Активность вакансии",
            "example": true,
            "type": "boolean"
          },
          "params": {
            "description": "Блок с параметрами вакансии. Все поля опциональны и выводятся при наличии",
            "properties": {
              "address": {
                "description": "Место работы",
                "example": "Санкт-Петербург, Пушкин, Малая улица, 12",
                "nullable": true,
                "type": "string"
              },
              "age_preferences": {
                "description": "Подходит кандидатам",
                "items": {
                  "enum": [
                    "Соискатели старше 45 лет",
                    "Соискатели от 14 лет",
                    "Соискатели от 16 лет",
                    "С нарушениями здоровья",
                    "Для студентов",
                    "Для пенсионеров"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array",
                "uniqueItems": true
              },
              "bonuses": {
                "description": "Бонусы, которые компания предоставляет кандидатам",
                "items": {
                  "enum": [
                    "Униформа",
                    "Проживание",
                    "Медицинская страховка",
                    "Питание",
                    "Оплата бензина",
                    "Парковка",
                    "Зоны отдыха",
                    "Транспорт до работы",
                    "Скидки в компании",
                    "Подарки детям на праздники",
                    "Оплата мобильной связи",
                    "Обучение",
                    "Компенсация проезда с работы",
                    "КАСКО",
                    "Смартфон",
                    "Услуги шиномонтажа"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array",
                "uniqueItems": true
              },
              "business_area": {
                "description": "Сфера деятельности компании.\n<br>\nПолучить актуальный список доступных значений можно из справочника `business_area` через метод [getDictByID](/api-catalog/job/documentation#operation/getDictByID).\n<br>\nСтатичный [справочник](https://www.avito.st/s/openapi/catalog-business-area.xml) объявлен устаревшим и более не будет использоваться. \n<br>\n",
                "nullable": true,
                "type": "string"
              },
              "change": {
                "description": "Смены",
                "items": {
                  "enum": [
                    "1 / 2",
                    "1 / 3",
                    "2 / 1",
                    "2 / 2",
                    "3 / 3",
                    "3 / 2",
                    "4 / 3",
                    "5 / 2",
                    "4 / 2",
                    "6 / 1",
                    "Без выходных",
                    "Утренние",
                    "Дневные",
                    "Вечерние",
                    "Ночные",
                    "Плавающие выходные",
                    "Работа по выходным"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array",
                "uniqueItems": true
              },
              "construction_work_type": {
                "description": "С какими видами строительных или ремонтных работ предстоит столкнуться кандидату",
                "items": {
                  "enum": [
                    "Малярные работы",
                    "Облицовка стен",
                    "Работы с плиткой",
                    "Монтаж и установка",
                    "Отделочные работы",
                    "Кровельные работы",
                    "Монтаж и настройка оборудования",
                    "Сварочные работы",
                    "Строительство фасадов",
                    "Формовка материалов",
                    "Бетонные и каменные работы",
                    "Ремонтные работы",
                    "Другие"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array",
                "uniqueItems": true
              },
              "coordinates": {
                "description": "Координаты адреса вакансии",
                "nullable": true,
                "properties": {
                  "latitude": {
                    "description": "Широта",
                    "example": 55.778644,
                    "type": "number"
                  },
                  "longitude": {
                    "description": "Долгота",
                    "example": 37.587901,
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "cuisine": {
                "description": "Блюда какой кухни предстоит готовить кандидату",
                "items": {
                  "enum": [
                    "Русская",
                    "Европейская",
                    "Кавказская",
                    "Итальянская",
                    "Японская",
                    "Турецкая",
                    "Другая"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array",
                "uniqueItems": true
              },
              "delivery_method": {
                "description": "Способ доставки",
                "items": {
                  "enum": [
                    "На автомобиле",
                    "На велосипеде",
                    "На самокате",
                    "Пешком"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array",
                "uniqueItems": true
              },
              "driving_experience": {
                "description": "Стаж вождения",
                "enum": [
                  "Нет опыта",
                  "Меньше года",
                  "1-2 года",
                  "3-5 лет",
                  "6-10 лет",
                  "Больше 10 лет"
                ],
                "nullable": true,
                "type": "string"
              },
              "driving_license_category": {
                "$ref": "#/components/schemas/DrivingLicenseCategory"
              },
              "eatery_type": {
                "description": "Формат заведения общепита в котором предстоит работать кандидату",
                "items": {
                  "enum": [
                    "Кафе",
                    "Бар",
                    "Фастфуд",
                    "Ресторан",
                    "Столовая",
                    "Пекарня",
                    "Другой"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array",
                "uniqueItems": true
              },
              "experience": {
                "description": "Требуемый опыт работы",
                "enum": [
                  "Без опыта",
                  "Более 1 года",
                  "Более 3 лет",
                  "Более 5 лет",
                  "Более 10 лет"
                ],
                "nullable": true,
                "type": "string"
              },
              "facility_type": {
                "description": "Тип склада или производственной линии на которой предстоит работать кандидату",
                "items": {
                  "enum": [
                    "Производство",
                    "Логистический центр",
                    "Склад",
                    "Другое"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array",
                "uniqueItems": true
              },
              "food_production_shop_type": {
                "description": "В каком цеху по приготовлению пищи предстоит работать кандидату",
                "items": {
                  "enum": [
                    "Холодный",
                    "Горячий",
                    "Кондитерский",
                    "Заготовочный",
                    "Другой"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array",
                "uniqueItems": true
              },
              "is_company_car": {
                "description": "Предоставляет ли компания машину",
                "enum": [
                  "Да",
                  "Нет"
                ],
                "nullable": true,
                "type": "string"
              },
              "medical_book": {
                "description": "Требуется ли медкнижка и кем она оформляется при приеме на работу",
                "enum": [
                  "Должен оформить кандидат",
                  "Поможем оформить",
                  "Не нужна"
                ],
                "nullable": true,
                "type": "string"
              },
              "paid_period": {
                "description": "Оплачиваемый период",
                "enum": [
                  "в месяц",
                  "в неделю",
                  "за смену",
                  "за час",
                  "сдельная оплата"
                ],
                "nullable": true,
                "type": "string"
              },
              "payout_frequency": {
                "description": "Частота выплат",
                "enum": [
                  "почасовая оплата",
                  "каждый день",
                  "дважды в месяц",
                  "раз в неделю",
                  "три раза в месяц",
                  "раз в месяц"
                ],
                "nullable": true,
                "type": "string"
              },
              "piecework_flag": {
                "description": "Сдельная оплата. На самом деле это bool поле. Но из-за ограничений платформы выводим как есть. Т.е. если поле присутствует, значит piecework_flag = true иначе = false",
                "enum": [
                  "Сдельная оплата"
                ],
                "nullable": true,
                "type": "string"
              },
              "profession": {
                "description": "Название профессии <br> Получить актуальный список доступных значений можно из справочника `profession` через метод [getDictByID](/api-catalog/job/documentation#operation/getDictByID). <br> Статичный [справочник](https://www.avito.st/s/openapi/catalog-profession.xml?v=5) объявлен устаревшим и более не будет использоваться. <br>",
                "nullable": true,
                "type": "string"
              },
              "programs": {
                "description": "Участие вакансии в программах Авито",
                "items": {
                  "enum": [
                    "Частые выплаты"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array",
                "uniqueItems": true
              },
              "registration_method": {
                "description": "Способ оформления",
                "items": {
                  "enum": [
                    "Трудовой договор",
                    "ГПХ с ИП",
                    "ГПХ с самозанятым",
                    "ГПХ с физическим лицом"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              },
              "retail_equipment_type": {
                "description": "С каким оборудованием или ПО предстоит работать кандидату",
                "items": {
                  "enum": [
                    "Касса и POS-терминалы",
                    "Программы учёта товаров"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array",
                "uniqueItems": true
              },
              "retail_shop_type": {
                "description": "Что продает магазин в котором предстоит работать кандидату",
                "items": {
                  "enum": [
                    "Гипермаркет или супермаркет",
                    "Продуктовый",
                    "Электроника и бытовая техника",
                    "Одежда и обувь",
                    "Парфюмерия и косметика",
                    "Строительство и хозтовары",
                    "Детские товары",
                    "Спортивные товары",
                    "Зоомагазин",
                    "Аптека",
                    "Другое"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array",
                "uniqueItems": true
              },
              "salary": {
                "description": "Блок с вилкой зарплаты. Все поля опциональны и выводятся при наличии",
                "nullable": true,
                "properties": {
                  "from": {
                    "description": "Нижняя граница зарплаты. Выводится при наличии",
                    "example": 30000,
                    "format": "int32",
                    "nullable": true,
                    "type": "integer"
                  },
                  "to": {
                    "description": "Верхняя граница зарплаты. Выводится при наличии",
                    "example": 60000,
                    "format": "int32",
                    "nullable": true,
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "salary_base_bonus": {
                "description": "Премия",
                "example": "5% от продаж в месяц",
                "nullable": true,
                "type": "string"
              },
              "salary_base_range": {
                "description": "Блок с размером оклада. Все поля опциональны и выводятся при наличии",
                "nullable": true,
                "properties": {
                  "from": {
                    "description": "Нижняя граница оклада. Выводится при наличии",
                    "example": 30000,
                    "format": "int32",
                    "nullable": true,
                    "type": "integer"
                  },
                  "to": {
                    "description": "Верхняя граница оклада. Выводится при наличии",
                    "example": 60000,
                    "format": "int32",
                    "nullable": true,
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "schedule": {
                "description": "Режим работы",
                "enum": [
                  "5/2",
                  "6/1",
                  "Вахта",
                  "Гибкий",
                  "Сменный",
                  "Полный день",
                  "Неполный день",
                  "Фиксированный",
                  "Удалённая работа"
                ],
                "nullable": true,
                "type": "string"
              },
              "taxes": {
                "description": "Зарплата указана",
                "enum": [
                  "До вычета налогов",
                  "На руки"
                ],
                "nullable": true,
                "type": "string"
              },
              "tools_availability": {
                "description": "Требуется ли кандидату собственные инструменты для работы",
                "enum": [
                  "Нужны свои",
                  "Предоставляет работодатель"
                ],
                "nullable": true,
                "type": "string"
              },
              "where_to_work": {
                "description": "Где предстоит работать",
                "enum": [
                  "На дому",
                  "С проживанием",
                  "Разъездная работа",
                  "Автозаправочная станция",
                  "Автосалон",
                  "Агентство",
                  "Аптека",
                  "Аэропорт",
                  "Банк",
                  "Вокзал",
                  "Гостиница",
                  "Детский сад",
                  "Кафе или ресторан",
                  "Кинотеатр",
                  "Магазин",
                  "Медицинское учреждение",
                  "На производстве",
                  "Ночной клуб",
                  "Офис",
                  "Офис продаж",
                  "Салон красоты",
                  "Склад",
                  "Спортклуб",
                  "Студия",
                  "Суд",
                  "Театр",
                  "Университет",
                  "Ферма",
                  "Школа"
                ],
                "nullable": true,
                "type": "string"
              },
              "worker_class": {
                "description": "Предпочтительный разряд кандидата",
                "items": {
                  "enum": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5 и выше",
                    "Не требуется"
                  ],
                  "type": "string"
                },
                "nullable": true,
                "type": "array",
                "uniqueItems": true
              }
            },
            "type": "object"
          },
          "salary": {
            "description": "Зарплата. Выводится при наличии",
            "example": 30000,
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "start_time": {
            "description": "Дата публикации вакансии",
            "example": "2020-08-21T08:37:36Z",
            "format": "date-time (RFC3339)",
            "type": "string"
          },
          "title": {
            "description": "Наименование вакансии",
            "example": "Фасовщики, Упаковщики, Комплектовщики",
            "type": "string"
          },
          "update_time": {
            "description": "Дата последнего обновления вакансии",
            "example": "2020-08-21T09:39:25Z",
            "format": "date-time (RFC3339)",
            "type": "string"
          },
          "url": {
            "description": "URL вакансии на сайте",
            "example": "/moskva/vakansii/fasovschiki_upakovschiki_komplektovschiki_469099_2142059193",
            "type": "string"
          },
          "uuid": {
            "description": "Идентификатор вакансии",
            "example": "b6f76fd2-bb67-11ef-9558-87673267655c",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Информация о вакансии v2",
        "type": "object"
      },
      "VacancyArchive": {
        "properties": {
          "employee_id": {
            "description": "employee_id - Идентификатор сотрудника на Авито.\nСотрудник может останавливать только закрепленные за ним вакансии в Avito Pro.\nСотрудник должен быть в активен.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VacancyAutoRenewal": {
        "properties": {
          "auto_renewal": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "VacancyCreate": {
        "properties": {
          "address": {
            "description": "Полный адрес объекта (строка длиной от 1 до 256 символов). Обязательное, если не указаны координаты.",
            "type": "string"
          },
          "administrator_organization_type": {
            "$ref": "#/components/schemas/AdministratorOrganizationType"
          },
          "age": {
            "$ref": "#/components/schemas/AgeCriteria"
          },
          "age_preferences": {
            "description": "Блок \"в том числе для кандидатов\" (массив строк)\n\nВозможные значения элементов массива:\n  - \"olderThan45\" - старше 45 лет;\n  - \"olderThan14\" - от 14 лет;\n  - \"olderThan16\" - от 16 лет;\n  - \"withHealthProblems\" - с нарушениями здоровья;\n  - \"students\" - для студентов;\n  - \"pensioners\" - для пенсионеров.\n",
            "enum": [
              "olderThan45",
              "olderThan14",
              "olderThan16",
              "withHealthProblems",
              "students",
              "pensioners"
            ],
            "items": {
              "enum": [
                "olderThan45",
                "olderThan14",
                "olderThan16",
                "withHealthProblems",
                "students",
                "pensioners"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "allow_calls": {
            "$ref": "#/components/schemas/AllowCalls"
          },
          "allow_messages": {
            "description": "Возможность откликнуться на вакансию через сайт. Если передается apply_processing, то значение allow_messages будет игнорироваться и равно true.",
            "type": "boolean"
          },
          "apply_processing": {
            "$ref": "#/components/schemas/ApplyProcessing"
          },
          "billing_type": {
            "description": "Вариант платного размещения\n\nВозможные значения:\n  - \"package\" - размещение объявления осуществляется только при наличии подходящего пакета размещения\n  - \"packageOrSingle\" - при наличии подходящего пакета оплата размещения объявления произойдет с него; если нет подходящего пакета, но достаточно денег на кошельке Авито, то произойдет разовое размещение\n  - \"single\" - только разовое размещение, произойдет при наличии достаточной суммы на кошельке Авито; если есть подходящий пакет размещения, он будет проигнорирован\n",
            "enum": [
              "package",
              "single",
              "packageOrSingle"
            ],
            "type": "string"
          },
          "bonuses": {
            "$ref": "#/components/schemas/Bonuses"
          },
          "business_area": {
            "$ref": "#/components/schemas/BusinessArea"
          },
          "citizenship": {
            "$ref": "#/components/schemas/CitizenshipCriteria"
          },
          "construction_work_type": {
            "$ref": "#/components/schemas/ConstructionWorkType"
          },
          "contacts": {
            "$ref": "#/components/schemas/Contacts"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "cuisine": {
            "$ref": "#/components/schemas/Cuisine"
          },
          "custom_employer_name": {
            "description": "Название компании (строка длиной до 60 символов)",
            "type": "string"
          },
          "delivery_method": {
            "description": "Способ доставки",
            "items": {
              "enum": [
                "car",
                "bike",
                "scooter",
                "foot"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "description": {
            "description": "Описание вакансии (строка длиной от 1 до 5000 символов) Поддерживает html-тэги `p`, `ul`, `ol`, `li`, `br`, `strong`, `em`",
            "type": "string"
          },
          "driving_experience": {
            "description": "Стаж вождения",
            "nullable": true,
            "properties": {
              "id": {
                "enum": [
                  "noExperience",
                  "lessThan1",
                  "1-2",
                  "3-5",
                  "6-10",
                  "moreThan10"
                ],
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "driving_license_category": {
            "$ref": "#/components/schemas/DrivingLicenseCategory"
          },
          "eatery_type": {
            "$ref": "#/components/schemas/EateryType"
          },
          "education_level": {
            "$ref": "#/components/schemas/VacancyEducationLevel"
          },
          "employee_id": {
            "description": "employee_id - Идентификатор сотрудника на Авито. Если этот параметр указан, то вакансия будет закреплена за сотрудником и с его баланса в Avito Pro будет списано размещение.\nИспользовать параметр можно только с billing_type равным package.\nСотрудник должен быть активен.\n",
            "type": "integer"
          },
          "employment": {
            "description": "Занятость <br>\nВозможные значения:\n  - temporary - Временная\n  - full - Полная\n  - internship - Стажировка\n  - partial - Частичная\n\nЕсли ничего не выбрать то будет автоматически проставляться в зависимости от режима работы:\nПри flexible и partTime, тип занятости - partial.\nДля всех остальных full.\n",
            "type": "string"
          },
          "experience": {
            "description": "Опыт работы",
            "properties": {
              "id": {
                "enum": [
                  "noMatter",
                  "moreThan1",
                  "moreThan3",
                  "moreThan5",
                  "moreThan10"
                ],
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "facility_type": {
            "$ref": "#/components/schemas/FacilityType"
          },
          "food_production_shop_type": {
            "$ref": "#/components/schemas/FoodProductionShopType"
          },
          "grade": {
            "$ref": "#/components/schemas/Grade"
          },
          "html_tags": {
            "$ref": "#/components/schemas/HtmlTags"
          },
          "image_url": {
            "description": "URL-адрес логотипа вакансии. Ссылка на файл должна быть прямой | (при переходе не открываются элементы другого сайта (логотипы, кнопки или другие детали интерфейса) и не запрашивается логин и пароль) и доступной для IP 185.89.12.0/22, 146.158.48.0/21, 185.79.237.224/28 и 87.245.204.32/28;",
            "type": "string"
          },
          "is_company_car": {
            "description": "Предоставляет ли компания автомобиль",
            "nullable": true,
            "type": "boolean"
          },
          "is_side_job": {
            "description": "Подработка",
            "type": "boolean"
          },
          "medical_book": {
            "$ref": "#/components/schemas/MedicalBookVacancy"
          },
          "medical_specialization": {
            "$ref": "#/components/schemas/MedicalSpecialization"
          },
          "medical_specialization_ids": {
            "$ref": "#/components/schemas/MedicalSpecializationIds"
          },
          "name": {
            "description": "Название вакансии (строка длиной от 1 до 50 символов)",
            "type": "string"
          },
          "payout_frequency": {
            "description": "Частота выплат<br>\nВозможные значения:\n  - \"dailyPay\" - Каждый день;\n  - \"biweeklyPay\" - Дважды в месяц;\n  - \"weeklyPay\" - Раз в неделю;\n  - \"thriceMonthlyPay\" - три раза в месяц;\n  - \"monthlyPay\" - Раз в месяц.\n\nДля paid_period равным month и week недоступно для выбора dailyPay.\n\ndeprecated значение hourlyPay будет заменено на dailyPay\n",
            "properties": {
              "id": {
                "enum": [
                  "dailyPay",
                  "weeklyPay",
                  "biweeklyPay",
                  "thriceMonthlyPay",
                  "monthlyPay"
                ],
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "profession": {
            "$ref": "#/components/schemas/Profession"
          },
          "registration_method": {
            "$ref": "#/components/schemas/RegistrationMethod"
          },
          "retail_equipment_type": {
            "$ref": "#/components/schemas/RetailEquipmentType"
          },
          "retail_shop_type": {
            "$ref": "#/components/schemas/RetailShopType"
          },
          "salary": {
            "deprecated": true,
            "description": "Зарплата, рублей в месяц, если заполнено вместе с salary_range, то приоритет у salary_range",
            "type": "integer"
          },
          "salary_detail": {
            "$ref": "#/components/schemas/SalaryDetail"
          },
          "salary_range": {
            "description": "Блок с вилкой зарплаты, если одновременно с salary, имеет приоритет",
            "properties": {
              "from": {
                "description": "Нижняя граница зарплаты, рублей в месяц",
                "example": 30000,
                "type": "integer"
              },
              "to": {
                "description": "Верхняя граница зарплаты, рублей в месяц",
                "example": 60000,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "schedule": {
            "description": "Режим работы <br>\nВозможные значения:\n  - flyInFlyOut - Вахта\n  - fixed - Фиксированный\n  - flexible - Гибкий\n  - shift - Сменный\n\ndeprecated значения fiveDay, sixDay, partTime, fullDay и remote будут заменены на fixed\nflyInFlyOut - Вахта, при выборе данного режима работы, адрес вакансии может быть только \"Город\", если адрес передается полноценный, то улица будет отрезана и адрес будет до \"Города\".\n",
            "properties": {
              "id": {
                "enum": [
                  "flyInFlyOut",
                  "fixed",
                  "flexible",
                  "shift"
                ],
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "shifts": {
            "$ref": "#/components/schemas/Shifts"
          },
          "tools_availability": {
            "$ref": "#/components/schemas/ToolsAvailability"
          },
          "vacancy_code": {
            "description": "Внутренний идентификатор вакансии или номер заявки на подбор, максимум 150 символов",
            "nullable": true,
            "type": "string"
          },
          "vehicle_type": {
            "$ref": "#/components/schemas/VehicleType"
          },
          "work_days_per_week": {
            "$ref": "#/components/schemas/WorkDaysPerWeek"
          },
          "work_format": {
            "description": "Блок \"Формат работы\" (массив строк)\n\nВозможные значения элементов массива:\n  - \"office\" - В офисе или на объекте;\n  - \"remote\" - Удалённо;\n  - \"gibrid\" - Гибрид.\n",
            "items": {
              "enum": [
                "office",
                "remote",
                "gibrid"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "work_hours_per_day": {
            "$ref": "#/components/schemas/WorkHoursPerDay"
          },
          "worker_class": {
            "$ref": "#/components/schemas/WorkerClass"
          }
        },
        "required": [
          "name",
          "description",
          "billing_type",
          "business_area",
          "employment",
          "schedule",
          "experience"
        ],
        "type": "object"
      },
      "VacancyCreateResult": {
        "properties": {
          "id": {
            "description": "Идентификатор добавленной вакансии на сайте.",
            "type": "string"
          },
          "url": {
            "description": "URL добавленной вакансии.",
            "type": "string"
          },
          "uuid": {
            "description": "Идентификатор добавленной вакансии.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "VacancyEducationLevel": {
        "description": "Предпочтительный уровень образования кандидата",
        "enum": [
          "notMatter",
          "secondary",
          "higher"
        ],
        "example": [
          "higher"
        ],
        "nullable": true,
        "type": "string"
      },
      "VacancyProlongate": {
        "properties": {
          "billing_type": {
            "description": "Вариант платного размещения\n\nВозможные значения:\n  - \"package\" - размещение объявления осуществляется только при наличии подходящего пакета размещения\n  - \"packageOrSingle\" - при наличии подходящего пакета оплата размещения объявления произойдет с него; если нет подходящего пакета, но достаточно денег на кошельке Авито, то произойдет разовое размещение\n  - \"single\" - только разовое размещение, произойдет при наличии достаточной суммы на кошельке Авито; если есть подходящий пакет размещения, он будет проигнорирован\n",
            "enum": [
              "package",
              "single",
              "packageOrSingle"
            ],
            "type": "string"
          },
          "employee_id": {
            "description": "employee_id - Идентификатор сотрудника на Авито. Если этот параметр указан, то с баланса сотрудника в Avito Pro будет списано размещение.\nИспользовать параметр можно только с billing_type равным package.\nСотрудник должен быть в активен.\n",
            "type": "integer"
          }
        },
        "required": [
          "billing_type"
        ],
        "type": "object"
      },
      "VacancySearchMeta": {
        "properties": {
          "page": {
            "example": 1,
            "format": "int32",
            "readOnly": true,
            "title": "Номер страницы",
            "type": "integer"
          },
          "pages": {
            "example": 6,
            "format": "int32",
            "readOnly": true,
            "title": "Количество страниц",
            "type": "integer"
          },
          "per_page": {
            "example": 25,
            "format": "int32",
            "readOnly": true,
            "title": "Количество записей на странице",
            "type": "integer"
          }
        },
        "title": "Мета-информация ответа",
        "type": "object"
      },
      "VacancyStatusesBody": {
        "properties": {
          "ids": {
            "items": {
              "description": "Идентификатор публикации вакансии в формате UUID",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "VacancyStatusesResult": {
        "items": {
          "properties": {
            "id": {
              "description": "Идентификатор публикации вакансии в формате UUID",
              "type": "string"
            },
            "last_action": {
              "properties": {
                "datetime": {
                  "description": "Время события",
                  "type": "string"
                },
                "error": {
                  "description": "Ошибка в процессе публикации вакансии",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "description": "Статус процесса публикации вакансии",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "vacancy": {
              "properties": {
                "id": {
                  "description": "Идентификатор опубликованной вакансии на Авито",
                  "type": "integer"
                },
                "moderation_status": {
                  "description": "Статус модерации вакансии на Авито. Может отсутствовать, если процесс модерации вакансии еще не начался\n<br>\nВозможные значения: \n  - in_progress - вакансия в процессе модерации\n  - allowed - вакансия разрешена на модерации\n  - blocked - вакансия заблокирована на модерации\n  - rejected - вакансия отклонена на модерации\n",
                  "enum": [
                    "in_progress",
                    "allowed",
                    "blocked",
                    "rejected"
                  ],
                  "example": "allowed",
                  "nullable": true,
                  "type": "string"
                },
                "reasons": {
                  "description": "Расширенное описание статуса",
                  "type": "object"
                },
                "status": {
                  "description": "Статус вакансии на Авито",
                  "enum": [
                    "created",
                    "activated",
                    "archived",
                    "blocked",
                    "closed",
                    "expired",
                    "rejected",
                    "unblocked"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "URL вакансии",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "VacancyUpdate": {
        "properties": {
          "address": {
            "description": "Полный адрес объекта (строка длиной от 0 до 256 символов)",
            "type": "string"
          },
          "administrator_organization_type": {
            "$ref": "#/components/schemas/AdministratorOrganizationType"
          },
          "age": {
            "$ref": "#/components/schemas/AgeCriteria"
          },
          "age_preferences": {
            "enum": [
              "olderThan45",
              "olderThan14",
              "olderThan16",
              "withHealthProblems",
              "students",
              "pensioners"
            ],
            "items": {
              "enum": [
                "olderThan45",
                "olderThan14",
                "olderThan16",
                "withHealthProblems",
                "students",
                "pensioners"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "allow_calls": {
            "$ref": "#/components/schemas/AllowCalls"
          },
          "allow_messages": {
            "description": "Возможность откликнуться на вакансию через сайт. Если передается apply_processing, то значение allow_messages будет игнорироваться и равно true.",
            "type": "boolean"
          },
          "apply_processing": {
            "$ref": "#/components/schemas/ApplyProcessing"
          },
          "billing_type": {
            "description": "Вариант платного размещения\n\nВозможные значения:\n  - \"package\" - размещение объявления осуществляется только при наличии подходящего пакета размещения\n  - \"packageOrSingle\" - при наличии подходящего пакета оплата размещения объявления произойдет с него; если нет подходящего пакета, но достаточно денег на кошельке Авито, то произойдет разовое размещение\n  - \"single\" - только разовое размещение, произойдет при наличии достаточной суммы на кошельке Авито; если есть подходящий пакет размещения, он будет проигнорирован\n",
            "enum": [
              "package",
              "single",
              "packageOrSingle"
            ],
            "type": "string"
          },
          "bonuses": {
            "$ref": "#/components/schemas/Bonuses"
          },
          "citizenship": {
            "$ref": "#/components/schemas/CitizenshipCriteria"
          },
          "construction_work_type": {
            "$ref": "#/components/schemas/ConstructionWorkType"
          },
          "contacts": {
            "$ref": "#/components/schemas/Contacts"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "cuisine": {
            "$ref": "#/components/schemas/Cuisine"
          },
          "custom_employer_name": {
            "description": "Название компании (строка длиной до 60 символов)",
            "type": "string"
          },
          "delivery_method": {
            "description": "Способ доставки",
            "items": {
              "enum": [
                "car",
                "bike",
                "scooter",
                "foot"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "description": {
            "description": "Описание вакансии (строка длиной от 1 до 5000 символов) Поддерживает html-тэги `p`, `ul`, `ol`, `li`, `br`, `strong`, `em`",
            "type": "string"
          },
          "driving_experience": {
            "description": "Стаж вождения",
            "nullable": true,
            "properties": {
              "id": {
                "enum": [
                  "noExperience",
                  "lessThan1",
                  "1-2",
                  "3-5",
                  "6-10",
                  "moreThan10"
                ],
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "driving_license_category": {
            "$ref": "#/components/schemas/DrivingLicenseCategory"
          },
          "eatery_type": {
            "$ref": "#/components/schemas/EateryType"
          },
          "education_level": {
            "$ref": "#/components/schemas/VacancyEducationLevel"
          },
          "employee_id": {
            "description": "employee_id - Идентификатор сотрудника на Авито.\nСотрудник может редактировать только закрепленные за ним вакансии в Avito Pro.\nСотрудник должен быть в активен.\n",
            "type": "integer"
          },
          "experience": {
            "description": "Опыт работы",
            "properties": {
              "id": {
                "enum": [
                  "noMatter",
                  "moreThan1",
                  "moreThan3",
                  "moreThan5",
                  "moreThan10"
                ],
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "facility_type": {
            "$ref": "#/components/schemas/FacilityType"
          },
          "food_production_shop_type": {
            "$ref": "#/components/schemas/FoodProductionShopType"
          },
          "grade": {
            "$ref": "#/components/schemas/Grade"
          },
          "html_tags": {
            "$ref": "#/components/schemas/HtmlTags"
          },
          "image_url": {
            "description": "URL-адрес логотипа вакансии. Ссылка на файл должна быть прямой | (при переходе не открываются элементы другого сайта (логотипы, кнопки или другие детали интерфейса) и не запрашивается логин и пароль) и доступной для IP 185.89.12.0/22, 146.158.48.0/21, 185.79.237.224/28 и 87.245.204.32/28;",
            "type": "string"
          },
          "is_company_car": {
            "description": "Предоставляет ли компания автомобиль",
            "nullable": true,
            "type": "boolean"
          },
          "is_side_job": {
            "description": "Подработка",
            "nullable": true,
            "type": "boolean"
          },
          "medical_book": {
            "$ref": "#/components/schemas/MedicalBookVacancy"
          },
          "medical_specialization": {
            "$ref": "#/components/schemas/MedicalSpecialization"
          },
          "medical_specialization_ids": {
            "$ref": "#/components/schemas/MedicalSpecializationIds"
          },
          "name": {
            "description": "Название вакансии (строка длиной от 0 до 50 символов)",
            "type": "string"
          },
          "payout_frequency": {
            "description": "Частота выплат\nВозможные значения:\n  - \"dailyPay\" - Каждый день;\n  - \"biweeklyPay\" - Дважды в месяц;\n  - \"weeklyPay\" - Раз в неделю;\n  - \"thriceMonthlyPay\" - три раза в месяц\n  - \"monthlyPay\" - Раз в месяц.\n\ndeprecated значение hourlyPay будет заменено на dailyPay\n",
            "nullable": true,
            "properties": {
              "id": {
                "enum": [
                  "dailyPay",
                  "weeklyPay",
                  "biweeklyPay",
                  "thriceMonthlyPay",
                  "monthlyPay"
                ],
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "profession": {
            "$ref": "#/components/schemas/Profession"
          },
          "registration_method": {
            "$ref": "#/components/schemas/RegistrationMethod"
          },
          "retail_equipment_type": {
            "$ref": "#/components/schemas/RetailEquipmentType"
          },
          "retail_shop_type": {
            "$ref": "#/components/schemas/RetailShopType"
          },
          "salary": {
            "deprecated": true,
            "description": "Зарплата, рублей в месяц, если заполнено вместе с salary_range, то приоритет у salary_range",
            "type": "integer"
          },
          "salary_detail": {
            "$ref": "#/components/schemas/SalaryDetail"
          },
          "salary_range": {
            "description": "Блок с вилкой зарплаты, если заполнен одновременно с salary, то имеет приоритет",
            "properties": {
              "from": {
                "description": "Нижняя граница зарплаты, рублей в месяц",
                "example": 30000,
                "type": "integer"
              },
              "to": {
                "description": "Верхняя граница зарплаты, рублей в месяц",
                "example": 60000,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "shifts": {
            "$ref": "#/components/schemas/Shifts"
          },
          "tools_availability": {
            "$ref": "#/components/schemas/ToolsAvailability"
          },
          "vacancy_code": {
            "description": "Внутренний идентификатор вакансии или номер заявки на подбор, максимум 150 символов",
            "nullable": true,
            "type": "string"
          },
          "vehicle_type": {
            "$ref": "#/components/schemas/VehicleType"
          },
          "work_days_per_week": {
            "$ref": "#/components/schemas/WorkDaysPerWeek"
          },
          "work_format": {
            "description": "Блок \"Формат работы\" (массив строк)\n\nВозможные значения элементов массива:\n  - \"office\" - В офисе или на объекте;\n  - \"remote\" - Удалённо;\n  - \"gibrid\" - Гибрид.\n",
            "items": {
              "enum": [
                "office",
                "remote",
                "gibrid"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "work_hours_per_day": {
            "$ref": "#/components/schemas/WorkHoursPerDay"
          },
          "worker_class": {
            "$ref": "#/components/schemas/WorkerClass"
          }
        },
        "required": [
          "billing_type"
        ],
        "type": "object"
      },
      "VacancyV2Create": {
        "properties": {
          "administrator_organization_type": {
            "$ref": "#/components/schemas/AdministratorOrganizationType"
          },
          "age": {
            "$ref": "#/components/schemas/AgeCriteria"
          },
          "age_preferences": {
            "description": "Блок \"в том числе для кандидатов\" (массив строк)\n\nВозможные значения элементов массива:\n  - \"olderThan45\" - старше 45 лет;\n  - \"olderThan14\" - от 14 лет;\n  - \"olderThan16\" - от 16 лет;\n  - \"withHealthProblems\" - с нарушениями здоровья;\n  - \"students\" - для студентов;\n  - \"pensioners\" - для пенсионеров.\n",
            "enum": [
              "olderThan45",
              "olderThan14",
              "olderThan16",
              "withHealthProblems",
              "students",
              "pensioners"
            ],
            "items": {
              "enum": [
                "olderThan45",
                "olderThan14",
                "olderThan16",
                "withHealthProblems",
                "students",
                "pensioners"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "apply_processing": {
            "$ref": "#/components/schemas/ApplyProcessing"
          },
          "billing_type": {
            "description": "Вариант платного размещения\n\nВозможные значения:\n  - \"package\" - размещение объявления осуществляется только при наличии подходящего пакета размещения\n  - \"packageOrSingle\" - при наличии подходящего пакета оплата размещения объявления произойдет с него; если нет подходящего пакета, но достаточно денег на кошельке Авито, то произойдет разовое размещение\n",
            "enum": [
              "package",
              "packageOrSingle"
            ],
            "type": "string"
          },
          "bonuses": {
            "$ref": "#/components/schemas/Bonuses"
          },
          "business_area": {
            "$ref": "#/components/schemas/BusinessArea"
          },
          "citizenship": {
            "$ref": "#/components/schemas/CitizenshipCriteria"
          },
          "construction_work_type": {
            "$ref": "#/components/schemas/ConstructionWorkType"
          },
          "contacts": {
            "description": "Контактная информация",
            "properties": {
              "allow_calls": {
                "$ref": "#/components/schemas/AllowCalls"
              },
              "allow_messages": {
                "description": "Возможность откликнуться на вакансию через сайт. Если передается apply_processing, то значение allow_messages будет игнорироваться и равно true",
                "type": "boolean"
              },
              "name": {
                "description": "Имя менеджера, контактного лица компании по данному объявлению (строка длиной до 30 символов)",
                "type": "string"
              },
              "phone": {
                "description": "Контактный телефон, если не передать - подставляется номер из профиля который используется по умолчанию. Если передать номер телефона которого нет в профиле, то он будет добавлен в профиль, но по нему необходимо будет пройти верификацию. Если номер телефона принадлежит другому пользователю, то вакансия не будет опубликована. Если вакансия публикуется от имени сотрудника и номер телефона ему не принадлежит - объявление так же не будет опубликовано.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "cuisine": {
            "$ref": "#/components/schemas/Cuisine"
          },
          "delivery_method": {
            "description": "Способ доставки",
            "items": {
              "enum": [
                "car",
                "bike",
                "scooter",
                "foot"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "description": {
            "description": "Описание вакансии (строка длиной от 1 до 5000 символов)\n\nМожно использовать HTML-теги в тексте.\n\nПоддерживаемые тэги - `p`, `ul`, `ol`, `li`, `br`, `strong`, `em`\n",
            "type": "string"
          },
          "driving_experience": {
            "description": "Стаж вождения",
            "enum": [
              "noExperience",
              "lessThan1",
              "1-2",
              "3-5",
              "6-10",
              "moreThan10"
            ],
            "nullable": true,
            "type": "string"
          },
          "driving_license_category": {
            "$ref": "#/components/schemas/DrivingLicenseCategory"
          },
          "eatery_type": {
            "$ref": "#/components/schemas/EateryType"
          },
          "education_level": {
            "$ref": "#/components/schemas/VacancyEducationLevel"
          },
          "employment": {
            "description": "Занятость <br>\nВозможные значения:\n  - temporary - Временная\n  - full - Полная\n  - internship - Стажировка\n  - partial - Частичная\n\nЕсли ничего не выбрать то будет автоматически проставляться в зависимости от графика работы: \nПри flexible и partTime, тип занятости - partial.\nßДля всех остальных full.\n",
            "type": "string"
          },
          "experience": {
            "description": "Опыт работы",
            "enum": [
              "noMatter",
              "moreThan1",
              "moreThan3",
              "moreThan5",
              "moreThan10"
            ],
            "type": "string"
          },
          "facility_type": {
            "$ref": "#/components/schemas/FacilityType"
          },
          "food_production_shop_type": {
            "$ref": "#/components/schemas/FoodProductionShopType"
          },
          "grade": {
            "$ref": "#/components/schemas/Grade"
          },
          "hierarchy": {
            "description": "employee_id - Идентификатор сотрудника на Авито. Если этот параметр указан, то с баланса сотрудника в Avito Pro будет списано размещение.\nИспользовать параметр можно только с billing_type равным package.\nСотрудник должен быть в активен.\n",
            "properties": {
              "employee_id": {
                "description": "Идентификатор сотрудника на Авито",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "image_url": {
            "description": "URL-адрес логотипа вакансии. Ссылка на файл должна быть прямой | (при переходе не открываются элементы другого сайта (логотипы, кнопки или другие детали интерфейса) и не запрашивается логин и пароль) и доступной для IP 185.89.12.0/22, 146.158.48.0/21, 185.79.237.224/28 и 87.245.204.32/28;",
            "type": "string"
          },
          "is_company_car": {
            "description": "Предоставляет ли компания автомобиль",
            "nullable": true,
            "type": "boolean"
          },
          "is_side_job": {
            "description": "Подработка",
            "type": "boolean"
          },
          "location": {
            "description": "Геолокация вакансии (как минимум одно из значений)",
            "properties": {
              "address": {
                "$ref": "#/components/schemas/LocationAddress"
              },
              "coordinates": {
                "$ref": "#/components/schemas/Coordinates"
              }
            },
            "type": "object"
          },
          "medical_book": {
            "$ref": "#/components/schemas/MedicalBookVacancy"
          },
          "medical_specialization": {
            "$ref": "#/components/schemas/MedicalSpecialization"
          },
          "medical_specialization_ids": {
            "$ref": "#/components/schemas/MedicalSpecializationIds"
          },
          "payout_frequency": {
            "description": "Частота выплат <br>\nВозможные значения:\n  - \"dailyPay\" - Каждый день;\n  - \"biweeklyPay\" - Дважды в месяц;\n  - \"weeklyPay\" - Раз в неделю;\n  - \"thriceMonthlyPay\" - три раза в месяц;\n  - \"monthlyPay\" - Раз в месяц.\n\nДля paid_period равным month и week недоступно для выбора dailyPay.\n\ndeprecated значение hourlyPay будет заменено на dailyPay\n",
            "enum": [
              "dailyPay",
              "weeklyPay",
              "biweeklyPay",
              "thriceMonthlyPay",
              "monthlyPay"
            ],
            "type": "string"
          },
          "profession": {
            "$ref": "#/components/schemas/Profession"
          },
          "programs": {
            "description": "Блок участие вакансии в программах (массив строк)\n\nЕсли у компании от лица которой создается вакансия нет всех необходимых разрешений на участие,\nпрограмма у вакансии не будет включена.\n\nВозможные значения элементов массива:\n  - \"chastyeVyplaty\" - Частые выплаты.\n",
            "enum": [
              "chastyeVyplaty"
            ],
            "items": {
              "enum": [
                "chastyeVyplaty"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "registration_method": {
            "$ref": "#/components/schemas/RegistrationMethod"
          },
          "retail_equipment_type": {
            "$ref": "#/components/schemas/RetailEquipmentType"
          },
          "retail_shop_type": {
            "$ref": "#/components/schemas/RetailShopType"
          },
          "salary": {
            "description": "Блок с вилкой зарплаты",
            "properties": {
              "from": {
                "description": "Нижняя граница зарплаты, рублей в месяц",
                "example": 30000,
                "type": "integer"
              },
              "to": {
                "description": "Верхняя граница зарплаты, рублей в месяц",
                "example": 60000,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "salary_detail": {
            "$ref": "#/components/schemas/SalaryDetail"
          },
          "schedule": {
            "description": "Режим работы <br>\nВозможные значения:\n  - flyInFlyOut - Вахта\n  - fixed - Фиксированный\n  - flexible - Гибкий\n  - shift - Сменный\n\nflyInFlyOut - Вахта, при выборе данного режима работы, адрес вакансии может быть только \"Город\", если адрес передается полноценный, то улица будет отрезана и адрес будет до \"Города\".\n\ndeprecated значения fiveDay, sixDay, partTime, fullDay и remote будут заменены на fixed\n",
            "enum": [
              "flyInFlyOut",
              "fixed",
              "flexible",
              "shift"
            ],
            "type": "string"
          },
          "shifts": {
            "$ref": "#/components/schemas/Shifts"
          },
          "title": {
            "description": "Название вакансии (строка длиной от 1 до 50 символов)",
            "type": "string"
          },
          "tools_availability": {
            "$ref": "#/components/schemas/ToolsAvailability"
          },
          "vacancy_code": {
            "description": "Внутренний идентификатор вакансии или номер заявки на подбор, максимум 150 символов",
            "nullable": true,
            "type": "string"
          },
          "vehicle_type": {
            "$ref": "#/components/schemas/VehicleType"
          },
          "work_days_per_week": {
            "$ref": "#/components/schemas/WorkDaysPerWeek"
          },
          "work_format": {
            "description": "Блок \"Формат работы\" (массив строк)\n\nВозможные значения элементов массива:\n  - \"office\" - В офисе или на объекте;\n  - \"remote\" - Удалённо;\n  - \"gibrid\" - Гибрид.\n",
            "items": {
              "enum": [
                "office",
                "remote",
                "gibrid"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "work_hours_per_day": {
            "$ref": "#/components/schemas/WorkHoursPerDay"
          },
          "worker_class": {
            "$ref": "#/components/schemas/WorkerClass"
          }
        },
        "required": [
          "title",
          "description",
          "billing_type",
          "business_area",
          "employment",
          "schedule",
          "experience",
          "location"
        ],
        "type": "object"
      },
      "VacancyV2CreateResult": {
        "properties": {
          "id": {
            "description": "Идентификатор добавленной вакансии в формате UUID (в случае дубликата UUID не меняется).\nИспользуется для запросов в ручки:\n- [Получение статуса публикации вакансии V2](https://developers.avito.ru/api-catalog/job/documentation#operation/vacancyGetStatuses)\n- [Редактирование вакансии V2](https://developers.avito.ru/api-catalog/job/documentation#operation/vacancyUpdateV2)\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VehicleType": {
        "description": "На какой технике предстоит работать кандитату, от выбора техники зависит какие категории прав можно будет указать в вакансии\n<br>\nПолучить актуальный список доступных значений можно из справочника `vehicle_type` через метод [getDictByID](/api-catalog/job/documentation#operation/getDictByID).\n<br>\nСтатичный [справочник](https://www.avito.st/s/openapi/catalog-vehicle-type.xml) объявлен устаревшим и более не будет использоваться. \n<br>\nИспользуется только для профессий \n - Водитель пассажирского транспорта\n - Водитель грузового транспорта\n - Водитель спецтехники\n - Машинист спецтехники\n<br>\n",
        "nullable": true,
        "type": "integer"
      },
      "WebhookSubscribeRequestBody": {
        "properties": {
          "secret": {
            "description": "сгенерированный ключ",
            "example": "cb1e150b-c5bf-4c3e-acd1-20ec88bdb3a1",
            "type": "string"
          },
          "url": {
            "description": "URL на который будут отправляться уведомления",
            "example": "https://mysite.webhook/",
            "format": "uri",
            "type": "string"
          }
        },
        "required": [
          "url",
          "secret"
        ],
        "type": "object"
      },
      "WebhooksSubscriptionResultList": {
        "properties": {
          "webhooks": {
            "description": "список вебхуков",
            "items": {
              "$ref": "#/components/schemas/WebhookSubscribeRequestBody"
            },
            "type": "array"
          }
        },
        "required": [
          "webhooks"
        ],
        "type": "object"
      },
      "WorkDaysPerWeek": {
        "description": "Количество рабочих дней в неделю\n<br>\nПолучить актуальный список доступных значений можно из справочника `work_days_per_week` через метод [getDictByID](/api-catalog/job/documentation#operation/getDictByID).\n<br>\nДоступен только для режима работы (schedule) равным \"Гибкий (flexible)\"\n",
        "items": {
          "format": "int64",
          "type": "integer"
        },
        "nullable": true,
        "type": "array"
      },
      "WorkHoursPerDay": {
        "description": "Количество рабочих часов в день\n<br>\nПолучить актуальный список доступных значений можно из справочника `work_hours_per_day` через метод [getDictByID](/api-catalog/job/documentation#operation/getDictByID).\n<br>\nДля режима работы (schedule) равным \"Вахта (flyInFlyOut)\" недоступны значения \"13–15 часов\", \"Больше 15 часов\" \n<br>\nДля типа занятости (employment) равным \"Полная (full)\" недоступны значения \"До 4 часов\", \"4–5 часов\"\n<br>\nДля типов занятости (employment) равным \"Временная (temporary)\", \"Стажировка (internship)\", \"Частичная (partial)\" недоступно значение \"Больше 15 часов\"\n",
        "items": {
          "format": "int64",
          "type": "integer"
        },
        "nullable": true,
        "type": "array"
      },
      "WorkerClass": {
        "description": "Предпочтительный разряд кандидата\n<br>\nВозможные значения элементов массива:\n  - \"1\" - Первый;\n  - \"2\" - Второй;\n  - \"3\" - Третий;\n  - \"4\" - Четвертый;\n  - \"5andHigher\" - Пятый и выше;\n  - \"notNeeded\" - Не требуется.\n",
        "example": [
          "1"
        ],
        "items": {
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5andHigher",
            "notNeeded"
          ],
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "authError": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "description": "Код ошибки",
                "example": 401,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "description": "Сообщение об ошибке",
                "example": "Unauthorized",
                "type": "string"
              }
            },
            "required": [
              "code",
              "message"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "badRequestError": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "description": "Код ошибки",
                "example": 400,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "description": "Сообщение об ошибке",
                "example": "Bad Request",
                "type": "string"
              }
            },
            "required": [
              "code",
              "message"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "forbiddenError": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "description": "Код ошибки",
                "example": 403,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "description": "Сообщение об ошибке",
                "example": "Forbidden",
                "type": "string"
              }
            },
            "required": [
              "code",
              "message"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "notFoundError": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "description": "Код ошибки",
                "example": 404,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "description": "Сообщение об ошибке",
                "example": "Not found",
                "type": "string"
              }
            },
            "required": [
              "code",
              "message"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "purchasingError": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "description": "Код ошибки",
                "example": 402,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "description": "Сообщение об ошибке",
                "example": "Payment required",
                "type": "string"
              }
            },
            "required": [
              "code",
              "message"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "serviceError": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "description": "Код ошибки",
                "example": 500,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "description": "Описание ошибки",
                "example": "Error while processing request. Please, contact support",
                "type": "string"
              }
            },
            "required": [
              "code",
              "message"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "serviceUnavailableError": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "description": "Код ошибки",
                "example": 503,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "description": "Описание ошибки",
                "example": "Service temporarily unavailable. Please, contact support",
                "type": "string"
              }
            },
            "required": [
              "code",
              "message"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "tooManyRequestsError": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "description": "Код ошибки",
                "example": 429,
                "format": "int32",
                "type": "integer"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "validatingError": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "description": "Код ошибки",
                "example": 400,
                "format": "int32",
                "type": "integer"
              },
              "fields": {
                "description": "Информация об ошибке валидации параметров в формате ключ-значение",
                "nullable": true,
                "type": "object"
              },
              "message": {
                "description": "Сообщение об ошибке",
                "example": "Validation error",
                "type": "string"
              }
            },
            "required": [
              "code",
              "message"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "verificationNeededError": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "description": "Код ошибки",
                "example": 403,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "description": "Сообщение об ошибке",
                "example": "Verification required",
                "type": "string"
              }
            },
            "required": [
              "code",
              "message"
            ],
            "type": "object"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "AuthorizationCode": {
        "description": "Это API использует OAuth 2 с механизмом authorization_code. Используйте его для доступа к данным других пользователей при разработке стороннего приложения. [Подробнее](/api-catalog/auth/documentation#tag/ApplicationAccess)",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://avito.ru/oauth",
            "scopes": {
              "autoload:reports": "Получение отчетов Автозагрузки",
              "items:apply_vas": "Применение дополнительных услуг",
              "items:info": "Получение информации об объявлениях",
              "job:applications": "Получение информации об откликах в CRM",
              "job:cv": "Получение информации резюме",
              "job:write": "Изменение объявлений вертикали Работа",
              "messenger:read": "Чтение сообщений в мессенджере Авито",
              "messenger:write": "Модифицирование сообщений в мессенджере Авито",
              "short_term_rent:read": "Получение информации об объявлениях краткосрочной аренды",
              "short_term_rent:write": "Изменение объявлений краткосрочной аренды",
              "stats:read": "Получение статистики объявлений",
              "user:read": "Получение информации о пользователе",
              "user_balance:read": "Получение баланса пользователя",
              "user_operations:read": "Получение истории операций пользователя"
            },
            "tokenUrl": "https://api.avito.ru/token"
          }
        },
        "type": "oauth2"
      },
      "ClientCredentials": {
        "description": "Это API использует OAuth 2 с механизмом client_credentials. Используйте его для доступа к возможностям своей личной учетной записи. [Подробнее](#tag/Access)",
        "flows": {
          "clientCredentials": {
            "scopes": {},
            "tokenUrl": "https://api.avito.ru/token"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "info": {
    "contact": {
      "email": "supportautoload@avito.ru"
    },
    "description": "API для размещения, редактирования и снятия с публикации вакансии Авито Работа\n**Авито API для бизнеса предоставляется согласно [Условиям\n  использования](https://www.avito.ru/legal/pro_tools/public-api).**\n",
    "title": "Авито.Работа",
    "version": "1"
  },
  "openapi": "3.0.0",
  "paths": {
    "/job/v1/applications/get_by_ids": {
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "description": "Сотрудник может получить информацию по откликам для вакансий которые он разместил в рамках компании",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        }
      ],
      "post": {
        "description": "Получение списка откликов по uuid, полученным по  [подписке на уведомления](https://developers.avito.ru/api-catalog/job/documentation#operation/applicationsWebhookPut) (webhook) и через метод  [получение идентификаторов откликов](https://developers.avito.ru/api-catalog/job/documentation#operation/applicationsGetIds) Максимальный лимит = 100\n",
        "operationId": "applicationsGetByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ids": {
                    "items": {
                      "description": "идентификатор отклика",
                      "example": "11102026de0ad1be10e2236f",
                      "type": "string"
                    },
                    "maxItems": 100,
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationsByIdsResult"
                }
              }
            },
            "description": "Успешный ответ"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:applications"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Получение списка откликов\n",
        "tags": [
          "Job"
        ]
      }
    },
    "/job/v1/applications/get_ids": {
      "get": {
        "description": "Возвращает лимитированное количество идентификаторов откликов отсортированных по дате создания  начиная с самых свежих, для последующего получения по ним расширенной информации через метод [получение списка откликов](https://developers.avito.ru/api-catalog/job/documentation#operation/applicationsGetByIds).\nМаксимальный лимит = 100\n",
        "operationId": "applicationsGetIds",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "description": "Возвращать отклики с датой обновления от указанной даты",
            "in": "query",
            "name": "updatedAtFrom",
            "required": true,
            "schema": {
              "example": "2006-01-02",
              "format": "YYYY-MM-DD",
              "type": "string"
            }
          },
          {
            "description": "<p>Идентификатор последнего отклика из предыдущего запроса</p>\n\n<p>Пример использования параметра:</p>\n\n<p>Получение первой страницы откликов, с датой обновления от 12 июня 2022 года:</p>\n\n<p><code>GET /job/v1/applications/get_ids?updatedAtFrom=2022-06-12</code></p>\n\n<p><code>[<br>\n  &nbsp{\"id\": \"62e3e7e542c3d9af3d85205e\",<...>},<br>\n  &nbsp<...>,<br>\n  &nbsp{\"id\": \"<strong>623850d1d3819d935dd02702</strong>\",<...>}<br>\n]</code></p>\n\n<p>Получение следующей страницы откликов:</p>\n\n<p><code>GET /job/v1/applications/get_ids?updatedAtFrom=2022-06-12&cursor=<strong>623850d1d3819d935dd02702</strong></code></p>\n",
            "in": "query",
            "name": "cursor",
            "schema": {
              "example": "623850d1d3819d935dd02702",
              "type": "string"
            }
          },
          {
            "description": "Идентификаторы вакансий. Опциональный фильтр (можно указать одно или несколько значений через запятую)",
            "in": "query",
            "name": "vacancyIds",
            "schema": {
              "example": "2241333,1424232",
              "type": "string"
            }
          },
          {
            "description": "Отклик просмотрен",
            "in": "query",
            "name": "is_viewed",
            "schema": {
              "example": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationsIdsResult"
                }
              }
            },
            "description": "Успешный ответ",
            "headers": {
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tooManyRequestsError"
                }
              }
            },
            "description": "Превышено допустимое количество запросов",
            "headers": {
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              }
            }
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:applications"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Получение идентификаторов откликов\n",
        "tags": [
          "Job"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "description": "Сотрудник может получить список его откликов для вакансий которые он разместил в рамках компании",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        }
      ]
    },
    "/job/v1/applications/set_is_viewed": {
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "description": "Предоставляет возможность менять статус отклика от имени сотрудника",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        }
      ],
      "post": {
        "description": "Возвращает информацию по откликам и статусу просмотренности отклика, при изменении статуса также статус изменится в Авито Pro.  Максимальный лимит = 100\n",
        "operationId": "applicationsSetIsViewed",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "applies": {
                    "description": "Список откликов",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "Идентификатор отклика",
                          "type": "string"
                        },
                        "is_viewed": {
                          "description": "Фильтр откликов по статусу просмотренности",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "id",
                        "is_viewed"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetApplicationsisVewedResult"
                }
              }
            },
            "description": "Успешный ответ",
            "headers": {
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              }
            }
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:applications"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Изменение статуса отклика\n",
        "tags": [
          "Job"
        ]
      }
    },
    "/job/v1/applications/webhook": {
      "delete": {
        "description": "Отписка от уведомлений о создании и обновлении откликов на вакансии. Если авторизация происходит от имени приложения, отписка от вебхука будет для приложения\n",
        "operationId": "applicationsWebhookDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/webhookUrl"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "example": true,
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Успешный ответ"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:applications"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Отключение уведомлений по откликам (webhook)\n",
        "tags": [
          "Job"
        ]
      },
      "get": {
        "description": "Получение информации по существующим подпискам на создание и обновление откликов. Будет возвращен самый старый активный вебхук. Если авторизация происходит от имени приложения, будет возвращен вебхук приложения\n",
        "operationId": "applicationsWebhookGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscribeRequestBody"
                }
              }
            },
            "description": "Успешный ответ"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:applications"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Получение информации о подписках (webhook)\n",
        "tags": [
          "Job"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        }
      ],
      "put": {
        "description": "Подписка на уведомления о создании и обновлении откликов на вакансии. Если авторизация происходит от имени приложения, вебхук будет привязан к приложению. Исключение:\n  - изменение сотрудника относящегося к объявлению (employee_id)\n\nВажно: \n  Проверьте доступность url, при его недоступности из контура Авито webhook не будет создан/перезаписан.\n  Если url недоступен больше месяца, то он удаляется и на него не придут новые уведомления.\n  Список адресов с которых идут запросы по url IP 185.89.12.0/22, 146.158.48.0/21, 185.79.237.224/28 и 87.245.204.32/28.\n",
        "operationId": "applicationsWebhookPut",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSubscribeRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscribeRequestBody"
                }
              }
            },
            "description": "Успешный ответ"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:applications"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Включение уведомлений по откликам (webhook)\n",
        "tags": [
          "Job"
        ]
      }
    },
    "/job/v1/applications/webhooks": {
      "get": {
        "description": "Получение списка активных подписок на создание и обновление откликов в хронологическом порядке от самого старого к самому новому. Если авторизация происходит от имени приложения, будут возвращены вебхуки приложения\n",
        "operationId": "applicationsWebhooksGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksSubscriptionResultList"
                }
              }
            },
            "description": "Успешный ответ"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:applications"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Получение списка подписок (webhook)\n",
        "tags": [
          "Job"
        ]
      }
    },
    "/job/v1/resumes/": {
      "get": {
        "operationId": "resumesGet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResumeSearchMeta"
                    },
                    "resumes": {
                      "items": {
                        "$ref": "#/components/schemas/SimplifiedResume"
                      },
                      "title": "Список резюме",
                      "type": "array"
                    }
                  },
                  "title": "Список найденных резюме",
                  "type": "object"
                }
              }
            },
            "description": "Успешный ответ"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validatingError"
                }
              }
            },
            "description": "Неверный запрос"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authError"
                }
              }
            },
            "description": "Требуется аутентификация"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceUnavailableError"
                }
              }
            },
            "description": "Метод API временно недоступен"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:cv"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Поиск резюме\n",
        "tags": [
          "Job"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "description": "Включает привилегии компании для сотрудника",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        },
        {
          "description": "Количество записей на странице (положительное число от 1 до 100)",
          "in": "query",
          "name": "per_page",
          "schema": {
            "default": 25,
            "example": 50,
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "description": "Номер страницы (положительное число больше 0, произведение page на per_page не должно превышать 5000)",
          "in": "query",
          "name": "page",
          "schema": {
            "default": 1,
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "description": "Курсор поиска (если не указан, будет начат новый поиск и его курсор будет возвращен в ответе)",
          "in": "query",
          "name": "cursor",
          "schema": {
            "format": "int64",
            "type": "integer"
          }
        },
        {
          "description": "Поля ответа (можно указать несколько значений через запятую)",
          "in": "query",
          "name": "fields",
          "schema": {
            "enum": [
              "title",
              "location",
              "specialization",
              "education_level",
              "total_experience",
              "gender",
              "age",
              "salary",
              "is_purchased",
              "created_at",
              "updated_at",
              "nationality",
              "driver_licence",
              "driver_licence_category",
              "driving_experience",
              "own_transport",
              "medical_book"
            ],
            "example": "title,specialization,total_experience,salary",
            "type": "string"
          }
        },
        {
          "description": "Поисковая фраза",
          "in": "query",
          "name": "query",
          "schema": {
            "example": "оператор call-центра",
            "type": "string"
          }
        },
        {
          "description": "Идентификатор региона поиска (можно указать несколько значений через запятую)\n<br>\nМетод принимает идентификаторы сущностей Region и City из [справочника](http://autoload.avito.ru/format/Locations.xml).\n",
          "in": "query",
          "name": "location",
          "schema": {
            "example": 637640,
            "format": "int64",
            "type": "integer"
          }
        },
        {
          "description": "Идентификатор сферы деятельности (можно указать несколько значений через запятую)\n<br>\nВозможные значения:\n- 10166 - IT, интернет, телеком\n- 10167 - Медицина, фармацевтика\n- 10168 - Продажи\n- 10169 - Страхование\n- 10170 - Транспорт, логистика\n- 10171 - Образование, наука\n- 10172 - Строительство\n- 10173 - Туризм, рестораны\n- 10174 - Фитнес, салоны красоты\n- 10175 - Без опыта, студенты\n- 10180 - Автомобильный бизнес\n- 10181 - Бухгалтерия, финансы\n- 10182 - Высший менеджмент\n- 10183 - Госслужба, НКО\n- 10184 - ЖКХ, эксплуатация\n- 10185 - Искусство, развлечения\n- 10186 - Консультирование\n- 10187 - Маркетинг, реклама, PR\n- 10188 - Охрана, безопасность\n- 10189 - Управление персоналом\n- 10190 - Юриспруденция\n- 10191 - Административная работа\n- 10192 - Банки, инвестиции\n- 10193 - Производство, сырьё, с/х\n- 16844 - Домашний персонал\n- 2804251 - Курьерская доставка\n- 2804250 - Такси\n",
          "in": "query",
          "name": "specialization",
          "schema": {
            "example": "10175,10186",
            "format": "int64",
            "type": "integer"
          }
        },
        {
          "description": "График работы (можно указать несколько значений через запятую)\n<br>\nВозможные значения:\n- partial-day - Неполный рабочий день\n- full-day - Полный рабочий день\n- fly-in-fly-out - Вахтовый метод\n- flexible - Гибкий график\n- shift - Сменный график\n- remote - Удаленная работа\n",
          "in": "query",
          "name": "schedule",
          "schema": {
            "enum": [
              "partial-day",
              "full-day",
              "fly-in-fly-out",
              "flexible",
              "shift",
              "remote"
            ],
            "example": "remote",
            "type": "string"
          }
        },
        {
          "description": "Готовность к командировкам (можно указать несколько значений через запятую)\n<br>\nВозможные значения:\n- ready - Готов\n- never - Не готов\n- sometimes - Иногда\n",
          "in": "query",
          "name": "business_trip_readiness",
          "schema": {
            "enum": [
              "ready",
              "never",
              "sometimes"
            ],
            "type": "string"
          }
        },
        {
          "description": "Готовность к переезду (можно указать несколько значений через запятую)\n<br>\nВозможные значения:\n- possible - Возможен\n- never - Невозможен\n",
          "in": "query",
          "name": "relocation_readiness",
          "schema": {
            "enum": [
              "possible",
              "never"
            ],
            "type": "string"
          }
        },
        {
          "description": "Пол (можно указать несколько значений через запятую)\n<br>\nВозможные значения:\n- female - Женщина\n- male - Мужчина\n",
          "in": "query",
          "name": "gender",
          "schema": {
            "enum": [
              "female",
              "male"
            ],
            "type": "string"
          }
        },
        {
          "description": "Минимальный возраст (включительно, положительное число от 14 до 99)",
          "in": "query",
          "name": "age_min",
          "schema": {
            "default": 14,
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "description": "Максимальный возраст (включительно, положительное число от 18 до 99)",
          "in": "query",
          "name": "age_max",
          "schema": {
            "default": 99,
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "description": "Уровень образования (можно указать несколько значений через запятую)\n<br>\nВозможные значения:\n- higher - Высшее\n- unfinished-higher - Неоконченное высшее\n- secondary - Среднее\n- special-secondary - Среднее специальное\n",
          "in": "query",
          "name": "education_level",
          "schema": {
            "enum": [
              "higher",
              "unfinished-higher",
              "secondary",
              "special-secondary"
            ],
            "example": "unfinished-higher",
            "type": "string"
          }
        },
        {
          "description": "Минимальный стаж работы (включительно, положительное число от 0 до 50)",
          "in": "query",
          "name": "experience_min",
          "schema": {
            "default": 0,
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "description": "Максимальный стаж работы (включительно, положительное число от 0 до 50)",
          "in": "query",
          "name": "experience_max",
          "schema": {
            "default": 50,
            "example": 3,
            "format": "int32",
            "type": "integer"
          }
        },
        {
          "description": "Минимальный размер заработной платы (включительно, положительное число)",
          "in": "query",
          "name": "salary_min",
          "schema": {
            "default": 0,
            "format": "int64",
            "type": "integer"
          }
        },
        {
          "description": "Максимальный размер заработной платы (включительно, положительное число)",
          "in": "query",
          "name": "salary_max",
          "schema": {
            "example": 25000,
            "format": "int64",
            "type": "integer"
          }
        },
        {
          "description": "Дата последнего обновления (от updated_at до текущей даты)",
          "in": "query",
          "name": "updated_at",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        {
          "description": "Дата последнего обновления (от updated_at)",
          "in": "query",
          "name": "updated_from",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        {
          "description": "Дата последнего обновления (до updated_at)",
          "in": "query",
          "name": "updated_to",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        {
          "description": "Идентификатор гражданства(можно указать несколько значений через запятую)</br>\nсм. идентификаторы гражданства в [справочнике](https://www.avito.st/s/openapi/catalog_nationality.xml)</br>\nРаспространенные значения:\n- 15973 - Россия\n- 15974 - Украина\n- 15975 - Белоруссия\n- 15979 - Азербайджан\n- 15985 - Армения\n- 16020 - Грузия\n- 15976 - Казахстан\n- 16046 - Киргизия\n- 16082 - Молдавия\n- 16129 - Таджикистан\n- 16140 - Узбекистан\n",
          "in": "query",
          "name": "nationality",
          "schema": {
            "example": "15973,15974,15975",
            "format": "int64",
            "type": "integer"
          }
        },
        {
          "description": "Водительское удостоверение\n<br>\nВозможные значения:\n- yes - Удостоверение есть\n- no - Удостоверения нет\n",
          "in": "query",
          "name": "driver_licence",
          "schema": {
            "enum": [
              true,
              false
            ],
            "type": "string"
          }
        },
        {
          "description": "Категория водительского удостоверения (можно указать несколько значений через запятую)\n<br>\nВозможные значения:\n  - a\n  - b\n  - be\n  - c\n  - ce\n  - d\n  - de\n  - m\n  - tm\n  - tb\n",
          "in": "query",
          "name": "driver_licence_category",
          "schema": {
            "enum": [
              "a",
              "b",
              "be",
              "c",
              "ce",
              "d",
              "de",
              "m",
              "tm",
              "tb"
            ],
            "type": "string"
          }
        },
        {
          "description": "Стаж вождения (можно указать несколько значений через запятую)\n<br>\nВозможные значения:\n  - less-than-three-years - Стаж вождения меньше трех лет\n  - more-than-three-years - Стаж вождения больше трех лет\n",
          "in": "query",
          "name": "driving_experience",
          "schema": {
            "enum": [
              "less-than-three-years",
              "more-than-three-years"
            ],
            "type": "string"
          }
        },
        {
          "description": "Свой транспорт (можно указать несколько значений через запятую)\n<br>\nВозможные значения:\n  - no - Нет\n  - car - Легковое авто\n  - cargo-car - Грузовое авто\n  - bike - Мотоцикл\n  - scooter - Мопед\n",
          "in": "query",
          "name": "own_transport",
          "schema": {
            "enum": [
              false,
              "car",
              "cargo-car",
              "bike",
              "scooter"
            ],
            "type": "string"
          }
        },
        {
          "description": "Медкнижка\n<br>\nВозможные значения:\n  - yes - Медкнижка есть\n  - no - Медкнижки нет\n",
          "in": "query",
          "name": "medical_book",
          "schema": {
            "enum": [
              true,
              false
            ],
            "type": "string"
          }
        }
      ]
    },
    "/job/v1/resumes/{resume_id}/contacts/": {
      "get": {
        "description": "Для получения контактов пользователя необходимо приобрести пакет просмотров в [личном кабинете](https://www.avito.ru/paid-services/contact-packages/cvs). Если резюме было получено из отклика, контакты предоставляются без списания из пакета просмотров.\n",
        "operationId": "resumeGetContacts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumeContacts"
                }
              }
            },
            "description": "Успешный ответ"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validatingError"
                }
              }
            },
            "description": "Неверный запрос"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authError"
                }
              }
            },
            "description": "Требуется аутентификация"
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchasingError"
                }
              }
            },
            "description": "Требуется пополнение пакета просмотров резюме"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchasingError"
                }
              }
            },
            "description": "Требуется верификация работодателя"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundError"
                }
              }
            },
            "description": "Резюме не найдено"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceUnavailableError"
                }
              }
            },
            "description": "Метод API временно недоступен"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:cv"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Доступ к контактным данным соискателя\n",
        "tags": [
          "Job"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "description": "Сотрудник компании может получить информацию о резюме приобретенных компанией",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        },
        {
          "description": "Идентификатор резюме",
          "in": "path",
          "name": "resume_id",
          "required": true,
          "schema": {
            "format": "int64",
            "type": "integer"
          }
        }
      ]
    },
    "/job/v1/vacancies": {
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "description": "Вакансия будет публиковаться от имени сотрудника компании, к которой он привязан.",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        }
      ],
      "post": {
        "description": "Для публикации вакансии необходимо приобрести тариф в [личном кабинете](https://www.avito.ru/paid-services/listing-fees).\n",
        "operationId": "vacancyCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "address": "Москва",
                "age": {
                  "from": 65,
                  "to": 16
                },
                "age_preferences": [
                  "olderThan45",
                  "withHealthProblems"
                ],
                "allow_messages": true,
                "apply_processing": {
                  "additional_questions": [
                    "experience",
                    "age",
                    "citizenship"
                  ],
                  "apply_type": "with_assistant"
                },
                "billing_type": "package",
                "business_area": 7,
                "citizenship": [
                  "rus",
                  "blr"
                ],
                "contacts": {
                  "name": "менеджер",
                  "phone": {
                    "city": "201",
                    "country": "+7",
                    "number": "1001158"
                  }
                },
                "description": "описание",
                "employment": "partial",
                "experience": {
                  "id": "moreThan1"
                },
                "is_remote": true,
                "is_side_job": false,
                "name": "объявление",
                "payout_frequency": {
                  "id": "dailyPay"
                },
                "profession": 3201667,
                "schedule": {
                  "id": "flyInFlyOut"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/VacancyCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacancyCreateResult"
                }
              }
            },
            "description": "Успешный ответ",
            "headers": {
              "Location": {
                "description": "Заголовок будет содержать ссылку на добавленную вакансию.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Oшибка в поле вакансии"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authError"
                }
              }
            },
            "description": "Требуется аутентификация"
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentError"
                }
              }
            },
            "description": "Oшибка оплаты"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreationForbiddenError"
                }
              }
            },
            "description": "Создание вакансий недоступно"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            },
            "description": "Ресурс не найден"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceUnavailableError"
                }
              }
            },
            "description": "Метод API временно недоступен"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:write"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Публикация вакансии",
        "tags": [
          "Job"
        ]
      }
    },
    "/job/v1/vacancies/archived/{vacancy_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "$ref": "#/components/parameters/pathVacancyId"
        },
        {
          "description": "Сотрудник компании может остановить публикацию только для своих вакансий",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        }
      ],
      "put": {
        "description": "Снимает с публикации объявление в категории Вакансии.\n",
        "operationId": "vacancyArchive",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "employee_id": 12342348
              },
              "schema": {
                "$ref": "#/components/schemas/VacancyArchive"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Успешный ответ"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Oшибка в поле запроса"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authError"
                }
              }
            },
            "description": "Требуется аутентификация"
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentError"
                }
              }
            },
            "description": "Oшибка оплаты"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoppingForbiddenError"
                }
              }
            },
            "description": "Остановка публикации вакансий недоступно"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFoundError"
                }
              }
            },
            "description": "Вакансия не найдена"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceUnavailableError"
                }
              }
            },
            "description": "Метод API временно недоступен"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:write"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Остановка публикации вакансии",
        "tags": [
          "Job"
        ]
      }
    },
    "/job/v1/vacancies/{vacancy_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "$ref": "#/components/parameters/pathVacancyId"
        },
        {
          "description": "Сотрудник компании может редактировать только свои вакансии.",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        }
      ],
      "put": {
        "description": "Редактирует объявление в категории Вакансии. Необходимо приобрести тариф в [личном кабинете](https://www.avito.ru/paid-services/listing-fees).\n",
        "operationId": "vacancyUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "address": "Москва",
                "age_preferences": [
                  "olderThan45",
                  "withHealthProblems"
                ],
                "allow_messages": true,
                "apply_processing": {
                  "apply_type": "only_with_resume"
                },
                "billing_type": "package",
                "contacts": {
                  "name": "менеджер",
                  "phone": {
                    "city": "201",
                    "country": "+7",
                    "number": "1001158"
                  }
                },
                "description": "описание",
                "experience": {
                  "id": "moreThan1"
                },
                "is_remote": false,
                "is_side_job": true,
                "name": "объявление",
                "payout_frequency": {
                  "id": "dailyPay"
                },
                "profession": 3201667
              },
              "schema": {
                "$ref": "#/components/schemas/VacancyUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Успешный ответ"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Oшибка в поле вакансии"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authError"
                }
              }
            },
            "description": "Требуется аутентификация"
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentError"
                }
              }
            },
            "description": "Oшибка оплаты"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditingForbiddenError"
                }
              }
            },
            "description": "Редактирование вакансий недоступно"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFoundError"
                }
              }
            },
            "description": "Редактируемая вакансия не найдена"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceUnavailableError"
                }
              }
            },
            "description": "Метод API временно недоступен"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:write"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Редактирование вакансии",
        "tags": [
          "Job"
        ]
      }
    },
    "/job/v1/vacancies/{vacancy_id}/prolongate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "$ref": "#/components/parameters/pathVacancyId"
        },
        {
          "description": "Сотрудник компании может реактивировать только свою вакансию",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        }
      ],
      "post": {
        "description": "Реактивирует объявление в категории Вакансии. Необходимо приобрести тариф в [личном кабинете](https://www.avito.ru/paid-services/listing-fees).\n",
        "operationId": "vacancyProlongate",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "billing_type": "package"
              },
              "schema": {
                "$ref": "#/components/schemas/VacancyProlongate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Успешный ответ"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestShort"
                }
              }
            },
            "description": "Oшибка в поле вакансии"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authError"
                }
              }
            },
            "description": "Требуется аутентификация"
          },
          "402": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentError"
                }
              }
            },
            "description": "Oшибка оплаты"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivationForbiddenError"
                }
              }
            },
            "description": "Активация вакансий недоступна"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFoundError"
                }
              }
            },
            "description": "Вакансия не найдена"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceUnavailableError"
                }
              }
            },
            "description": "Метод API временно недоступен"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:write"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Реактивация вакансии",
        "tags": [
          "Job"
        ]
      }
    },
    "/job/v2/resumes/{resume_id}": {
      "get": {
        "description": "По умолчанию fields и params выводятся все. Если указана только часть полей - остальные поля будут отсутствовать в ответе.\n",
        "operationId": "resumeGetItem",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resume2.0"
                }
              }
            },
            "description": "Успешный ответ"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestError"
                }
              }
            },
            "description": "Неверный запрос"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authError"
                }
              }
            },
            "description": "Требуется аутентификация"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundError"
                }
              }
            },
            "description": "Резюме не найдено"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceUnavailableError"
                }
              }
            },
            "description": "Метод API временно недоступен"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:cv"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Просмотр данных резюме\n",
        "tags": [
          "Job"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "description": "Включает привилегии компании для сотрудника, получает доступ к резюме от имени компании",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        },
        {
          "description": "Идентификатор резюме",
          "in": "path",
          "name": "resume_id",
          "required": true,
          "schema": {
            "format": "int64",
            "type": "integer"
          }
        },
        {
          "description": "Поля основного тела ответа (можно указать несколько значений через запятую). По умолчанию отображаются все поля.",
          "in": "query",
          "name": "fields",
          "schema": {
            "enum": [
              "title",
              "description",
              "url",
              "salary",
              "is_purchased",
              "start_time",
              "update_time",
              "is_active"
            ],
            "example": "title,description,salary",
            "type": "string"
          }
        },
        {
          "description": "Дополнительные поля, которые входят в params (можно указать несколько значений через запятую). По умолчанию отображаются все поля.",
          "in": "query",
          "name": "params",
          "schema": {
            "enum": [
              "ability_to_business_trip",
              "address",
              "age",
              "business_area",
              "education",
              "education_list",
              "driver_licence",
              "driver_licence_category",
              "experience",
              "experience_list",
              "language_list",
              "moving",
              "nationality",
              "pol",
              "razreshenie_na_rabotu_v_rossii",
              "schedule"
            ],
            "example": "address,age",
            "type": "string"
          }
        },
        {
          "description": "Признак того, нужно ли отдавать картинки, по умолчанию false",
          "in": "query",
          "name": "photos",
          "schema": {
            "default": false,
            "example": true,
            "type": "boolean"
          }
        }
      ]
    },
    "/job/v2/vacancies": {
      "get": {
        "operationId": "searchVacancy",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "description": "Количество записей на странице (положительное число от 10 до 100)",
            "in": "query",
            "name": "per_page",
            "schema": {
              "default": 25,
              "example": 10,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Номер страницы (положительное число больше 0, произведение page на per_page не должно превышать 5000)",
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "example": 1,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Идентификатор региона поиска (можно указать несколько значений через запятую)\n<br>\nМетод принимает идентификаторы сущностей Region и City из [справочника](http://autoload.avito.ru/format/Locations.xml).\n",
            "in": "query",
            "name": "location",
            "schema": {
              "example": 637640,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Идентификатор сферы деятельности  <br> Получить актуальный список доступных значений можно из справочника `business_area` через метод [getDictByID](/api-catalog/job/documentation#operation/getDictByID). <br> Статичный [справочник](https://www.avito.st/s/openapi/catalog-business-area.xml) объявлен устаревшим и более не будет использоваться.  <br>\n",
            "in": "query",
            "name": "business_area",
            "schema": {
              "example": 3278315,
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/VacancySearchMeta"
                    },
                    "vacancies": {
                      "items": {
                        "$ref": "#/components/schemas/SimplifiedVacancy"
                      },
                      "title": "Список вакансий",
                      "type": "array"
                    }
                  },
                  "title": "Список найденных вакансий",
                  "type": "object"
                }
              }
            },
            "description": "Успешный ответ"
          },
          "204": {
            "description": "Отсутствуют данные по запросу"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validatingError"
                }
              }
            },
            "description": "Неверный запрос"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authError"
                }
              }
            },
            "description": "Требуется аутентификация"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "code": {
                          "description": "Код ошибки",
                          "example": 403,
                          "format": "int32",
                          "type": "integer"
                        },
                        "message": {
                          "description": "Текст ошибки",
                          "example": "Forbidden",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Доступ запрещен"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceUnavailableError"
                }
              }
            },
            "description": "Метод API временно недоступен"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:vacancy"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Поиск вакансий\n",
        "tags": [
          "Job"
        ],
        "x-rate-limiter": {
          "default": 120
        }
      },
      "post": {
        "description": "Для публикации вакансии необходимо приобрести тариф в [личном кабинете](https://www.avito.ru/paid-services/listing-fees).\nДля проверки статуса публикации используйте полученный идентификатор в [методе получения статуса](https://developers.avito.ru/api-catalog/job/documentation#operation/vacancyGetStatuses).\n",
        "operationId": "vacancyCreateV2",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "description": "Вакансия будет публиковаться от имени сотрудника компании, к которой он привязан.",
            "in": "header",
            "name": "X-Is-Employee",
            "schema": {
              "nullable": true,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "age": {
                  "from": 65,
                  "to": 16
                },
                "age_preferences": [
                  "olderThan45",
                  "withHealthProblems"
                ],
                "apply_processing": {
                  "additional_questions": [
                    "experience",
                    "age",
                    "citizenship"
                  ],
                  "apply_type": "with_assistant"
                },
                "billing_type": "packageOrSingle",
                "business_area": 7,
                "citizenship": [
                  "rus",
                  "blr"
                ],
                "contacts": {
                  "allow_messages": true,
                  "name": "менеджер",
                  "phone": "+72011001158"
                },
                "delivery_method": [
                  "car",
                  "bike"
                ],
                "description": "описание",
                "driving_experience": "moreThan10",
                "driving_license_category": [
                  "B",
                  "C",
                  "M"
                ],
                "employment": "partial",
                "experience": "moreThan1",
                "is_company_car": true,
                "is_remote": false,
                "is_side_job": true,
                "location": {
                  "address": {
                    "house": "д.1",
                    "locality": "Москва",
                    "street": "ул. Лесная"
                  },
                  "coordinates": {
                    "latitude": 55.778644,
                    "longitude": 37.587901
                  }
                },
                "payout_frequency": "dailyPay",
                "profession": 3201667,
                "programs": [
                  "chastyeVyplaty"
                ],
                "salary": {
                  "from": 1000,
                  "to": 2000
                },
                "schedule": "flyInFlyOut",
                "title": "объявление"
              },
              "schema": {
                "$ref": "#/components/schemas/VacancyV2Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacancyV2CreateResult"
                }
              }
            },
            "description": "Успешный ответ"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestOnVacancy"
                }
              }
            },
            "description": "Oшибка в поле вакансии"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authError"
                }
              }
            },
            "description": "Требуется аутентификация"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreationForbiddenError"
                }
              }
            },
            "description": "Создание вакансий недоступно"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceUnavailableError"
                }
              }
            },
            "description": "Метод API временно недоступен"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:write"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Публикация вакансии v2",
        "tags": [
          "Job"
        ]
      }
    },
    "/job/v2/vacancies/batch": {
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "description": "Сотрудник компании получает информацию по вакансиям, которую он опубликовал для компании",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        }
      ],
      "post": {
        "description": "По умолчанию fields и params выводятся все. Если указана только часть полей - остальные поля будут отсутствовать в ответе.\nДля просмотра данных необходимо быть владельцем вакансии.\n",
        "operationId": "vacanciesGetByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "fields": [
                  "title"
                ],
                "ids": [
                  12342348,
                  12342349
                ],
                "params": [
                  "business_area",
                  "schedule"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/VacanciesGetByIdsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vacancies2.0"
                }
              }
            },
            "description": "Успешный ответ",
            "headers": {
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestError"
                }
              }
            },
            "description": "Неверный запрос"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authError"
                }
              }
            },
            "description": "Требуется аутентификация"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              }
            },
            "description": "Пользователь не владелец объявления"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundError"
                }
              }
            },
            "description": "Вакансия не найдена"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tooManyRequestsError"
                }
              }
            },
            "description": "Превышено допустимое количество запросов",
            "headers": {
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceUnavailableError"
                }
              }
            },
            "description": "Метод API временно недоступен"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:vacancy"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Просмотр данных вакансий\n",
        "tags": [
          "Job"
        ]
      }
    },
    "/job/v2/vacancies/statuses": {
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "description": "Сотрудник компании получает информацию о статусе публикации вакансии, которую он опубликовал для компании",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        }
      ],
      "post": {
        "description": "Получение списка статусов процесса публикации и модерации вакансий.\nВ запросе используйте идентификатор, полученный [методе\nпубликации вакансии v2](https://developers.avito.ru/api-catalog/job/documentation#operation/vacancyCreateV2)\n",
        "operationId": "vacancyGetStatuses",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VacancyStatusesBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacancyStatusesResult"
                }
              }
            },
            "description": "Успешный ответ"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Oшибка в формате запроса"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authError"
                }
              }
            },
            "description": "Требуется аутентификация"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              }
            },
            "description": "Пользователь не авторизован для этой операции"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceUnavailableError"
                }
              }
            },
            "description": "Метод API временно недоступен"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:write"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Получение статуса публикации вакансий V2",
        "tags": [
          "Job"
        ]
      }
    },
    "/job/v2/vacancies/update/{vacancy_uuid}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "$ref": "#/components/parameters/pathVacancyUUID"
        },
        {
          "description": "Сотрудник компании может редактировать только свои вакансии.",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        }
      ],
      "post": {
        "description": "Редактирует объявление в категории Вакансии. Необходимо приобрести тариф в [личном кабинете](https://www.avito.ru/paid-services/listing-fees).\n",
        "operationId": "vacancyUpdateV2",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "age_preferences": [
                  "olderThan45",
                  "withHealthProblems"
                ],
                "apply_processing": {
                  "apply_type": "only_with_resume"
                },
                "billing_type": "packageOrSingle",
                "business_area": 7,
                "contacts": {
                  "allow_messages": true,
                  "name": "менеджер",
                  "phone": 72011001158
                },
                "delivery_method": [
                  "car",
                  "bike"
                ],
                "description": "описание <strong>c тегами</strong>",
                "driving_experience": "moreThan10",
                "driving_license_category": [
                  "B",
                  "C",
                  "M"
                ],
                "employment": "partial",
                "experience": "moreThan1",
                "is_company_car": true,
                "is_remote": true,
                "is_side_job": true,
                "location": {
                  "address": {
                    "house": "д.1",
                    "locality": "Москва",
                    "street": "ул. Лесная"
                  },
                  "coordinates": {
                    "latitude": 55.778644,
                    "longitude": 37.587901
                  }
                },
                "payout_frequency": "dailyPay",
                "profession": 3201667,
                "programs": [
                  "chastyeVyplaty"
                ],
                "salary": {
                  "from": 1000,
                  "to": 2000
                },
                "schedule": "flyInFlyOut",
                "title": "объявление"
              },
              "schema": {
                "$ref": "#/components/schemas/VacancyV2Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacancyV2CreateResult"
                }
              }
            },
            "description": "Успешный ответ"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestOnVacancy"
                }
              }
            },
            "description": "Oшибка в поле вакансии"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authError"
                }
              }
            },
            "description": "Требуется аутентификация"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreationForbiddenError"
                }
              }
            },
            "description": "Создание вакансий недоступно"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceUnavailableError"
                }
              }
            },
            "description": "Метод API временно недоступен"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:write"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Редактирование вакансии v2",
        "tags": [
          "Job"
        ]
      }
    },
    "/job/v2/vacancies/{vacancy_id}": {
      "get": {
        "description": "По умолчанию fields и params выводятся все. Если указана только часть полей - остальные поля будут отсутствовать в ответе.\nДля просмотра данных необходимо быть владельцем вакансии.\n",
        "operationId": "vacancyGetItem",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vacancy2.0"
                }
              }
            },
            "description": "Успешный ответ"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestError"
                }
              }
            },
            "description": "Неверный запрос"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authError"
                }
              }
            },
            "description": "Требуется аутентификация"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenError"
                }
              }
            },
            "description": "Пользователь не владелец объявления"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundError"
                }
              }
            },
            "description": "Вакансия не найдена"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceUnavailableError"
                }
              }
            },
            "description": "Метод API временно недоступен"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:vacancy"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Просмотр данных вакансии\n",
        "tags": [
          "Job"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "description": "Сотрудник компании получает информацию по вакансии, которую он опубликовал для компании",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        },
        {
          "description": "Идентификатор вакансии",
          "in": "path",
          "name": "vacancy_id",
          "required": true,
          "schema": {
            "format": "int64",
            "type": "integer"
          }
        },
        {
          "description": "Поля основного тела ответа (можно указать несколько значений через запятую). По умолчанию отображаются все поля.",
          "in": "query",
          "name": "fields",
          "schema": {
            "enum": [
              "title",
              "description",
              "url",
              "salary",
              "start_time",
              "update_time",
              "is_active"
            ],
            "example": "title,description,salary",
            "type": "string"
          }
        },
        {
          "description": "Дополнительные поля, которые входят в params (можно указать несколько значений через запятую). По умолчанию отображаются все поля.\ndeprecated значения manufacturing_type, industry_type, programs, warehouse_functionality",
          "in": "query",
          "name": "params",
          "schema": {
            "enum": [
              "business_area",
              "schedule",
              "experience",
              "address",
              "coordinates",
              "change",
              "where_to_work",
              "payout_frequency",
              "age_preferences",
              "piecework_flag",
              "paid_period",
              "salary",
              "salary_base_range",
              "salary_base_bonus",
              "taxes",
              "is_company_car",
              "driving_license_category",
              "driving_experience",
              "delivery_method",
              "profession",
              "registration_method",
              "bonuses",
              "worker_class",
              "food_production_shop_type",
              "eatery_type",
              "cuisine",
              "medical_book",
              "facility_type",
              "retail_equipment_type",
              "retail_shop_type",
              "tools_availability",
              "construction_work_type",
              "work_format",
              "manufacturing_type",
              "industry_type",
              "programs",
              "warehouse_functionality",
              "vacancy_code"
            ],
            "example": "address,schedule",
            "type": "string"
          }
        }
      ]
    },
    "/job/v2/vacancies/{vacancy_uuid}/auto_renewal": {
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "$ref": "#/components/parameters/pathVacancyUUID"
        },
        {
          "description": "Включает привилегии компании для сотрудника, позволяет включать автопродление вакансий принадлежащих сотруднику опубликованных от имени компании",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        }
      ],
      "put": {
        "description": "Включает или выключает автопродление вакансии. Если вакансия в архиве, то при включении автопродления вакансия будет автоматически поднята из архива.\n",
        "operationId": "vacancyAutoRenewal",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "auto_renewal": true
              },
              "schema": {
                "$ref": "#/components/schemas/VacancyAutoRenewal"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Успешный ответ"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validatingError"
                }
              }
            },
            "description": "Неверный запрос"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authError"
                }
              }
            },
            "description": "Требуется аутентификация"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundError"
                }
              }
            },
            "description": "вакансия не найдена"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceUnavailableError"
                }
              }
            },
            "description": "Метод API временно недоступен"
          }
        },
        "security": [
          {
            "AuthorizationCode": [
              "job:write"
            ]
          },
          {
            "ClientCredentials": []
          }
        ],
        "summary": "Автопродление вакансии v2",
        "tags": [
          "Job"
        ]
      }
    },
    "/job/v2/vacancy/dict": {
      "get": {
        "description": "Возвращает все доступные словари (Заменяет существующие списки)",
        "operationId": "getDicts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "description": "Профессия",
                    "id": "profession"
                  },
                  {
                    "description": "Техника",
                    "id": "vehicle_type"
                  }
                ],
                "schema": {
                  "items": {
                    "properties": {
                      "description": {
                        "description": "Описание категории",
                        "type": "string"
                      },
                      "id": {
                        "description": "Уникальный идентификатор категории",
                        "example": "profession",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Успешный ответ с массивом категорий"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          }
        },
        "summary": "Получение списка доступных словарей",
        "tags": [
          "Job"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "description": "Включает привилегии компании для сотрудника",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        }
      ]
    },
    "/job/v2/vacancy/dict/{dictionary_id}": {
      "get": {
        "description": "Возвращает доступные значения по имени справочника. Значения с признаком deprecated не могут использоваться при создании и обновлении вакансий.",
        "operationId": "getDictByID",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "deprecated": true,
                    "id": 10106,
                    "name": "IT, интернет, телеком"
                  },
                  {
                    "deprecated": false,
                    "id": 3278315,
                    "name": "Архитектура и дизайн"
                  }
                ],
                "schema": {
                  "items": {
                    "properties": {
                      "deprecated": {
                        "description": "Указывает, является ли значение устаревшим. Устаревшие значения могут использоваться только при чтении ранее созданных вакансий",
                        "type": "boolean"
                      },
                      "id": {
                        "description": "Уникальный идентификатор",
                        "type": "integer"
                      },
                      "name": {
                        "description": "Название",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Успешный ответ"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceError"
                }
              }
            },
            "description": "Внутренняя ошибка метода API"
          }
        },
        "summary": "Получение доступных значений списка по ID словаря",
        "tags": [
          "Job"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/authHeader"
        },
        {
          "$ref": "#/components/parameters/pathDictionaryId"
        },
        {
          "description": "Включает привилегии компании для сотрудника",
          "in": "header",
          "name": "X-Is-Employee",
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        }
      ]
    }
  },
  "servers": [
    {
      "url": "https://api.avito.ru/"
    }
  ],
  "tags": [
    {
      "description": "API для размещения, редактирования и снятия с публикации вакансии Авито Работа\nОписание API произведено в формате [**Swagger 3.0**](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md).\nВы можете использовать данный файл для ознакомления с методами API, а также для генерации базового\nкода для работы с API на удобном для вас языке программирования с помощью утилиты\n[**Swagger Codegen**](https://swagger.io/swagger-codegen/) или online сервиса [**Swagger Editor**](https://editor.swagger.io/).\n\n**Авито API для бизнеса предоставляется согласно [Условиям использования](https://www.avito.ru/legal/pro_tools/public-api).**\n\nПо всем вопросам работы с API необходимо обращаться в Службу Поддержки профессиональных инструментов:\n\n<li>телефон: <b>+7 495 777-10-66</b></li>\n<li>email: <a href=\"mailto:supportautoload@avito.ru\">supportautoload@avito.ru</a></li>\n\n# Типы авторизации\nДля использования данного API запрос должен быть авторизован. В данный момент API Авито использует следующие механизмы авторизации.\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\nПодробнее о каждом механизме и его назначении можно прочитать в соответствующем разделе.\n",
      "name": "Job",
      "x-displayName": "Работа"
    }
  ]
}