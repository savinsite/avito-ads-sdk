# coding: utf-8

"""
    Мессенджер

    API Мессенджера - набор методов для получения списка чатов пользователя на Авито, получения сообщений в чате, отправки сообщения в чат и другие Через API Мессенджера можно организовать интеграцию между мессенджером Авито и сторонней системой в обе стороны  **Авито API для бизнеса предоставляется согласно [Условиям использования](https://www.avito.ru/legal/pro_tools/public-api).** 

    The version of the OpenAPI document: 1
    Contact: supportautoload@avito.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from avito_messenger.models.add_blacklist_request_body import AddBlacklistRequestBody

class TestAddBlacklistRequestBody(unittest.TestCase):
    """AddBlacklistRequestBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddBlacklistRequestBody:
        """Test AddBlacklistRequestBody
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddBlacklistRequestBody`
        """
        model = AddBlacklistRequestBody()
        if include_optional:
            return AddBlacklistRequestBody(
                users = [
                    avito_messenger.models.add_blacklist_request_body_users_inner.addBlacklistRequestBody_users_inner(
                        context = avito_messenger.models.add_blacklist_request_body_users_inner_context.addBlacklistRequestBody_users_inner_context(
                            item_id = 56, 
                            reason_id = 1, ), 
                        user_id = 94235311, )
                    ]
            )
        else:
            return AddBlacklistRequestBody(
        )
        """

    def testAddBlacklistRequestBody(self):
        """Test AddBlacklistRequestBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
