# coding: utf-8

"""
    Мессенджер

    API Мессенджера - набор методов для получения списка чатов пользователя на Авито, получения сообщений в чате, отправки сообщения в чат и другие Через API Мессенджера можно организовать интеграцию между мессенджером Авито и сторонней системой в обе стороны  **Авито API для бизнеса предоставляется согласно [Условиям использования](https://www.avito.ru/legal/pro_tools/public-api).** 

    The version of the OpenAPI document: 1
    Contact: supportautoload@avito.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from avito_messenger.models.chat_context import ChatContext

class TestChatContext(unittest.TestCase):
    """ChatContext unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChatContext:
        """Test ChatContext
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChatContext`
        """
        model = ChatContext()
        if include_optional:
            return ChatContext(
                type = 'item',
                value = avito_messenger.models.chat_context_value.Chat_context_value(
                    id = 1768287444, 
                    images = avito_messenger.models.chat_context_value_images.Chat_context_value_images(
                        count = 4, 
                        main = avito_messenger.models.chat_context_value_images_main.Chat_context_value_images_main(
                            140x105 = 'https://01-img-staging-proxy.k.avito.ru/140x105/5815183159.jpg', ), ), 
                    price_string = '300 000 ₽', 
                    status_id = 10, 
                    title = 'Mazda 3 2008', 
                    url = 'https://avito.ru/moskva/avtomobili/mazda_3_2008_1768287444', 
                    user_id = 141906442, )
            )
        else:
            return ChatContext(
        )
        """

    def testChatContext(self):
        """Test ChatContext"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
